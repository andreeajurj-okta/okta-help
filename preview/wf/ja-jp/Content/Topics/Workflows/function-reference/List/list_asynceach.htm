<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Mark Moussa">
    <head>         <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/List/list_asynceach.htm" />         <title>[%=Heading.Level1%] | Okta</title>         <meta name="coveo:connector" content="List" /> <meta name="coveo:method" content="asynceach" /> <meta name="coveo:method-description" content="Process a list by calling a helper flow for each item." /> <meta name="coveo:method-type" content="action" />     <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/></head>
    <body>
        <div data-content-id="hoc-main-content">
            <p>
                <h1>For Each - Ignore Errors</h1>
                <p>リストを処理し、アイテムごとにヘルパーフローを呼び出します。 この関数は</MadCap:xref>For Each 関数とほぼ同じですが、重要な相違点が1つあります。For Eachでは、ヘルパーフローでアイテムを処理するときにエラーが発生すると、以後のアイテムの処理は停止されます。<MadCap:xref href="list_each.htm">これに対して、この関数はヘルパーフローでエラーが発生しても、すべてのアイテムの処理を続けます。 次のように考えてください。</p>
                <ul>
                    <li>
                        <p>すべてのヘルパーアイテムが正しく処理されたときのみフローを成功とするには、<strong>For Each</strong>を使用します。</p>
                    </li>
                    <li>
                        <p>通常の動作において、一部のアイテムにエラーが予測される場合は、<strong>For Each - Ignore Errors</strong>を使用します。</p>
                    </li>
                </ul>
                <p>一部のアイテムにエラーが予測されるフローの例として、メールアドレスのリストにメールを送信することを考えます。これらのメールアドレスの一部は古くなっていると考えられるため、それらのアドレスに送信を試みたときエラーが返される可能性があります。しかし、エラーが発生しても、リストにある他のメールアドレスへの送信を止める必要はありません。このような場合、For Each - Ignore Errorsが最適です。エラーについて再試行する場合などは、ヘルパーを再実行できます。このカードの使用法の詳細については、<MadCap:xref href="list_each.htm">For Each</MadCap:xref>トピックを参照してください。</p>
                <h4>入力フィールド</h4>
                <ul>
                    <li>
                        <p>                             <strong>list</strong>（オブジェクトのリスト）：このリストに対して実行します。</p>
                    </li>
                    <li>
                        <p>                             <strong>flow</strong>（オブジェクト）：リストの各アイテムについて、ヘルパーフローが1回ずつ呼び出されます。</p>
                    </li>
                    <li>
                        <p>                             <strong>with the following values</strong> （動的に生成）：ヘルパーフローにより定義される入力で、<b>［Choose Flow（フローの選択）］</b>ダイアログを使用してヘルパーフローを選択すると設定されます。</p>
                    </li>
                    <li>
                        <p>                             <strong>concurrency</strong>（数値）：リストのアイテムを並列に処理する数。 アイテムを順に処理することが重要な場合は1を使用します。それ以外の場合、5や10などの大きな数値を使用するとフローが速く完了します。 </p>
                    </li>
                </ul>
                <h4>出力フィールド</h4>
                <p>このカードに出力フィールドはありません。</p>
            </p>
            <h2>関連項目</h2>
            <p>                 <MadCap:xref href="../../learn/about-lists.htm">リストについて</MadCap:xref>             </p>
            <p>                 <MadCap:xref href="../functions.htm">ワークフローの関数</MadCap:xref>             </p>
            <p>                 <MadCap:xref href="../../workflows-elements.htm">Okta Workflowsの要素について</MadCap:xref>             </p>
        </div>
    </body>
</html>
