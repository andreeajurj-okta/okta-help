<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Robert Milkovich">
    <head>         <link href="../../../Resources/TableStyles/standard-shaded-rows.css" rel="stylesheet" MadCap:stylesheetType="table" />         <title>[[[Undefined variable Heading.Level1]]]</title>         <link href="" rel="stylesheet" type="text/css" />     <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/></head>
    <body>
        <h1>アプリのサインオン・ポリシーの移行</h1>
        <p>Okta Identity Engineのアプリ・サインオン・ポリシーには、Okta Classicのポリシーと同様のパラメーターがありますが、いくつかの重要な違いがあります。&#160;次の表で、Okta ClassicとOkta Identity Engineのアプリ・サインオン・ポリシー・ルールの構成タスクについて説明します。</p>
        <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard-shaded-rows.css');border-left-style: solid;border-left-width: 1px;border-left-color: #c0c0c0;border-right-style: solid;border-right-width: 1px;border-right-color: #c0c0c0;border-top-style: solid;border-top-width: 1px;border-top-color: #c0c0c0;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #c0c0c0;" class="TableStyle-srb_header_alt_shade" cellspacing="0">             <col class="TableStyle-srb_header_alt_shade-Column-Column1" /> <col class="TableStyle-srb_header_alt_shade-Column-Column1" /> <col class="TableStyle-srb_header_alt_shade-Column-Column1" />             <thead>
                <tr class="TableStyle-srb_header_alt_shade-Head-Header1">
                    <th class="TableStyle-srb_header_alt_shade-HeadF-Column1-Header1">
                        <p>タスク</p>
                    </th>
                    <th class="TableStyle-srb_header_alt_shade-HeadF-Column1-Header1">
                        <p>Classic Engine</p>
                    </th>
                    <th class="TableStyle-srb_header_alt_shade-HeadD-Column1-Header1">
                        <p>Identity Engine</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-srb_header_alt_shade-Body-Body1">
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">ルールに名前を付ける</td>
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">ルール名</td>
                    <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body1">ルール名</td>
                </tr>
                <tr class="TableStyle-srb_header_alt_shade-Body-Body2">
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">このルールを適用するユーザーを指定する</td>
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">
                        <ul>
                            <li>このアプリに割り当てられているすべてのユーザー（デフォルト）</li>
                            <li>グループを選択</li>
                            <li>ユーザーを選択</li>
                            <li>グループを除外</li>
                            <li>ユーザーを除外</li>
                        </ul>
                    </td>
                    <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body2">
                        <ul>
                            <li>このアプリに割り当てられている任意のユーザー・タイプ（デフォルト）</li>
                            <li>グループを選択 </li>
                            <li>ユーザー・タイプを選択</li>
                        </ul>
                        <p>ユーザーの選択とユーザー/グループの除外の両方が移行されますが、新しく作成するルールでは構成可能な条件として表示されません。</p>
                    </td>
                </tr>
                <tr class="TableStyle-srb_header_alt_shade-Body-Body1">
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">ユーザーがアプリにアクセスするのに必要な場所を指定する</td>
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">                         ユーザーが次の場所にいる場合：                          <ul><li>すべての場所（任意のIP）</li><li>ゾーン内（特定）</li><li>ゾーン外<br /></li></ul></td>
                    <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body1">ユーザーのIP：<ul><li>任意のIP</li><li>Oktaで定義された任意のネットワーク・ゾーン </li><li>次のいずれかのゾーン（ゾーンを指定）</li></ul><p>ゾーン外の除外は、Classic Engineから移行されますが、新しく作成するルールでは構成可能な条件として表示されません。</p></td>
                </tr>
                <tr class="TableStyle-srb_header_alt_shade-Body-Body2">
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">クライアントまたはデバイスを構成する </td>
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">                         クライアント・アクセス・ポリシー（CAP）に従って、特定のプラットフォームにルールを適用します。 <p>信頼できるデバイスと信頼できないデバイスにルールを適用します。</p></td>
                    <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body2">                         CAPは移行されますが、デバイスを信頼するルールと信頼しないルールは移行されません。登録済みのデバイスおよび未登録のデバイスに対して新しいルールを作成する必要があります。&#160; </td>
                </tr>
                <tr class="TableStyle-srb_header_alt_shade-Body-Body1">
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">許容可能なリスク・スコアを示す</td>
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">Okta Classicのアプリ・サインオン・ポリシーでは使用できません。</td>
                    <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body1">このルールは、特定のリスク・スコアを持つアプリ・サインオン・イベントにのみ適用します。</td>
                </tr>
                <tr class="TableStyle-srb_header_alt_shade-Body-Body2">
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">                         カスタム式                     </td>
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">                         Okta Classicのアプリ・サインオン・ポリシーでは使用できません。 </td>
                    <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body2">                         このルールは、カスタム式がtrueの場合にのみ適用します。 </td>
                </tr>
                <tr class="TableStyle-srb_header_alt_shade-Body-Body1">
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">
                        <p>アクセス</p>
                    </td>
                    <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">                         すべての条件が満たされた場合のアクセスは次のとおりです。                          <ul><li>許可</li><li>拒否</li></ul></td>
                    <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body1">                         すべての条件が満たされた場合のアクセスは次のとおりです。                          <ul><li>拒否</li><li>認証の成功後に許可</li></ul></td>
                </tr>
                <tr class="TableStyle-srb_header_alt_shade-Body-Body2">
                    <td class="TableStyle-srb_header_alt_shade-BodyC-Column1-Body2">                         認証要件                     </td>
                    <td class="TableStyle-srb_header_alt_shade-BodyC-Column1-Body2">
                        <ul>
                            <li>パスワードの再認証を求める（期間）</li>
                            <li>要素の入力を求める（頻度）</li>
                        </ul>
                    </td>
                    <td class="TableStyle-srb_header_alt_shade-BodyA-Column1-Body2">                         アプリにアクセスするためのアシュアランス要件を適用します。&#160;                         <ul><li>ユーザーに再認証を求めるタイミングを指定する </li><li>パスワードの選択では、パスワードの再認証とパスワード以外の再認証の期間を指定する</li></ul></td>
                </tr>
            </tbody>
        </table>
        <p>Identity&#160;Engineポリシーに対する最も重要な追加機能はアシュアランス要件です。アプリのサインオン・ポリシーのすべての条件を満たすユーザーは、適切なアシュアランス要件のみでアプリに対する認証を行います。Identity Engineのその他の機能強化には、リスク・スコアリングとカスタム式が含まれ、ユーザーがアクセスを許可される前に、カスタマイズされたセキュリティー・レベルを確実に満たすようにします。Classic Engine管理者はアプリのサインオン・ポリシーでユーザーとグループを除外できましたが、Okta Identity Engineでは、新しいルールで除外オプションを使用することはできません。</p>
        <h2>Classic EngineからIdentity Engineへの移行シナリオ</h2>
        <p>Classic&#160;Engineでアプリのサインオン・ポリシーを設定すると、デフォルトですべてのクライアント・オプションが選択されます。ユーザーが誰であるか、どのグループに属しているか、デバイスのクライアントとプラットフォーム、およびユーザーがネットワークに接続しているかどうかに基づいて、ルールを追加します。 </p>
        <p>Identity Engineにアップグレードすると、Classic Engineのアプリ・サインオン・ポリシーは、いくつかの条件付きで移行されます。 </p>
        <h3>デフォルト・ポリシー</h3>
        <p>デフォルトのアプリ・サインオン・ポリシーを使用していたClassic Engineのアプリは、デフォルトのキャッチオール・ルールが有効になっているOkta Identity Engineポリシーに移行されます。キャッチオール・ルールのみを使用するアプリでは、（Oktaサインオン・ポリシーで必要とされる以上の）追加の認証なしで、アプリに割り当てられているすべてのユーザーへのアクセスが許可されます。</p>
        <ul>
            <li>                 <b>IFユーザーのタイプ</b>：任意</li>
            <li>                 <b>ANDユーザーのグループ・メンバーシップ</b>：任意&#160;</li>
            <li>                 <b>ANDデバイスID</b>：任意&#160;&#160;</li>
            <li>                 <b>ANDユーザーのIP</b>：任意のゾーン&#160;&#160;</li>
            <li>                 <b>ANDリスク</b>：任意&#160;&#160;</li>
            <li>                 <b>AND次のカスタム式をtrueとする</b>：N/A&#160;&#160;</li>
            <li>                 <b>THENアクセスの可否</b>：許可&#160;</li>
            <li>                 <b>ANDユーザーが使用する認証方法</b>：任意の1要素タイプ&#160;&#160;</li>
            <li>                 <b>AND所有要素の制約</b>：N/A&#160;&#160;</li>
            <li>                 <span style="font-weight: bold;">Okta Verifyユーザー・インタラクション</b>：常に必須</span> <b>&#160;</li>
            <li>                 <b>パスワードの再認証の頻度</b>：デバイスごとに1回&#160;</li>
        </ul>
        <p>             <img src="../images/asop-catch-all.png" class="thumbnail" />         </p>
        <p>Okta Identity Engineのすべてのアプリのポリシーには、キャッチオール・ルールがあります。キャッチオール・ルールは編集できますが、アクセスをさらにカスタマイズするために、<a href="add-app-sign-on-policy-rule.htm">さらにルールを追加</a>して優先順位を付けることができます。&#160;</p>
        <h3>再認証+要素の検証</h3>
        <p>再認証と要素の検証が有効になっているClassic Engineのアプリ・サインオン・ポリシーは、パスワードと追加要素が有効になっているOkta Identity Engineポリシーに移行します。再認証の頻度は、Okta Classicポリシーの期間によって決まります。たとえば、2時間ごとにパスワードの再認証を要求し、毎回要素を求めるOkta Classicポリシーは、次のOkta Identity Engineポリシー・ルールに移行されます。</p>
        <ul>
            <li>                 <b>IFユーザーのタイプ</b>：任意</li>
            <li>                 <b>ANDユーザーのグループ・メンバーシップ</b>：任意&#160;</li>
            <li>                 <b>ANDデバイスID</b>：任意&#160;&#160;</li>
            <li>                 <b>ANDユーザーのIP</b>：任意のゾーン&#160;&#160;</li>
            <li>                 <b>ANDリスク</b>：N/A&#160;&#160;</li>
            <li>                 <b>AND次のカスタム式をtrueとする</b>：N/A&#160;&#160;</li>
            <li>                 <b>THENアクセスの可否</b>：許可&#160;</li>
            <li>                 <b>ANDユーザーが使用する認証方法</b>：パスワード+別の要素&#160;&#160;&#160;</li>
            <li>                 <b>AND所有要素の制約</b>：N/A&#160;&#160;</li>
            <li>                 <span style="font-weight: bold;">Okta Verifyユーザー・インタラクション</b>：常に必須</span> <b>&#160;</li>
            <li>                 <b>パスワードの再認証の頻度</b>：2時間&#160;</li>
            <li>                 <b>ほかのあらゆる要素での再認証の頻度</b>：すべてのサインイン試行&#160;</li>
        </ul>
        <p>             <img src="../images/asop-reauth.png" class="thumbnail" />         </p>
        <h3>再認証なしの多要素</h3>
        <p>再認証なしで毎回多要素を必要とするClassic Engineのアプリ・サインオン・ポリシーは、Okta Classicの設定と同等の再認証間隔で、認証に所有要素を必要とするOkta Identity Engineポリシーに移行します。</p>
        <ul>
            <li>                 <b>IFユーザーのタイプ</b>：任意</li>
            <li>                 <b>ANDユーザーのグループ・メンバーシップ</b>：任意&#160;</li>
            <li>                 <b>ANDデバイスID</b>：任意&#160;&#160;</li>
            <li>                 <b>ANDユーザーのIP</b>：任意のゾーン&#160;&#160;</li>
            <li>                 <b>ANDリスク</b>：N/A&#160;&#160;</li>
            <li>                 <b>AND次のカスタム式をtrueとする</b>：N/A&#160;&#160;</li>
            <li>                 <b>THENアクセスの可否</b>：許可&#160;</li>
            <li>                 <b>ANDユーザーが使用する認証方法</b>：所有要素&#160;&#160;</li>
            <li>                 <b>AND所有要素の制約</b>：N/A&#160;&#160;</li>
            <li>                 <span style="font-weight: bold;">Okta Verifyユーザー・インタラクション</b>：常に必須</span> <b>&#160;</li>
            <li>                 <b>ほかのあらゆる要素での再認証の頻度</b>：すべてのサインイン試行&#160;</li>
        </ul>
        <p>             <img src="../images/asop-multifactor.png" class="thumbnail" />         </p>
        <h2>             <span>関連項目</span>         </h2>
        <p>             <MadCap:xref href="about-app-sign-on-policies.htm">アプリのサインオン・ポリシー</MadCap:xref>         </p>
        <p>             <MadCap:xref href="add-app-sign-on-policy-rule.htm">アプリのサインオン・ポリシー・ルールの追加</MadCap:xref>         </p>
    </body>
</html>
