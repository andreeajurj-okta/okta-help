<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_okta_html5_topnav" data-mc-search-type="Stem" data-mc-help-system-file-name="okta_help.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-conditions="SFDC-syndication.not-for-sfdc" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Okta RADIUS Server Agent Deployment</title>
        <link rel="shortcut icon" href="../../../Resources/Images/favicon.ico" type="image/x-icon" />
        <script>/* <![CDATA[ */
			(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

			ga('create', 'UA-15777010-10', 'auto');
			ga('send', 'pageview');

		/* ]]> */</script>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/okta-help.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="relative clearfix"><a class="logo" href="../../ReleaseNotes/okta-rel-notes.htm" alt="Okta"></a>
                                    <div class="navigation-wrapper nocontent">
                                        <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                            </li>
                                        </ul>
                                    </div>
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="nav-search row outer-row">
                                <form class="search" action="#">
                                    <div class="search-bar search-bar-container needs-pie">
                                        <input class="search-field needs-pie" type="search" placeholder="Search" />
                                        <div class="search-filter-wrapper">
                                            <div class="search-filter">
                                                <div class="search-filter-content">
                                                    <ul>
                                                        <li>All Files</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="search-submit-wrapper" dir="ltr">
                                            <div class="search-submit" title="Search">
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins_okta_toolbar mc-component nocontent" style="mc-topic-toolbar-items: SelectBrowseSequence ExpandAll CollapseAll;">
                                <div class="button-group-container-left">
                                    <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                        <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                    </button>
                                    <button class="button needs-pie next-topic-button" title="Navigate next">
                                        <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                    </button>
                                    <div class="button-separator">
                                    </div>
                                    <button class="button needs-pie print-button" title="Print">
                                        <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                    </button>
                                    <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                        <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                    </button>
                                </div>
                            </div>
                            <div class="RightSidebar-sm">
                                <div>
                                    <ul class="nocontent menu _Skins_okta_side_menu_mobile mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/BrowseSequences/radius_agent.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                    </ul>
                                    <h1>Okta RADIUS Server Agent Deployment</h1>
                                    <p>This topic describes best practices when deploying the Okta RADIUS Server. While the topic uses the Cisco ASA VPN as a VPN Device and F5 as the Load Balancer, customers may replace these with other similar products configured adequately.</p>
                                    <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />When to use the Okta RADIUS Server</a></span>
                                        <div class="MCDropDownBody dropDownBody">
                                            <p>The Okta RADIUS Server <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">agent<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>A software agent is a lightweight program that runs as a service outside of Okta. It is typically installed behind a firewall and allows Okta to tunnel communication between an on-premises service and Okta's cloud service. Okta employs several agent types: Active Directory, LDAP, RADIUS, RSA, Active Directory Password Sync, and IWA. For example, users can install multiple Active Directory agents to ensure that the integration is robust and highly available across geographic locations.</span></a> delegates authentication to Okta using single-factor authentication (SFA) or multi-factor authentication (MFA). It installs as a Windows service and currently supports the Password Authentication Protocol (PAP). Okta’s RADIUS Server agent supports UDP and defaults to port 1812. Okta RADIUS Server Agent support multiple ports simultaneously.</p>
                                            <p>The Okta RADIUS Server should be used for authentication, when authentication is being carried on by:</p>
                                            <ul>
                                                <li value="1">VPN devices that don’t support <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">SAML<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An acronym for Security Assertion Markup Language, SAML is an XML-based standard for exchanging authentication and authorization data between an identity provider (IdP) and a service provider (SP). The SAML standard addresses issues unique to the single sign-on (SSO) solution, and defines three roles: the end user, the IDP, and the SP.</span></a></li>
                                                <li value="2">Virtual Desktops and Reverse Proxies that don’t support SAML</li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Basic Okta RADIUS Server Agent Authentication Flow</a></span>
                                        <div class="MCDropDownBody dropDownBody">
                                            <p class="note">Active Directory user, Okta Verify OTP</p>
                                            <p>
                                                <img src="../../../Resources/Images/radius-server-agent-dp-01.png" style="float: left;max-width: 100%;max-height: auto;" />
                                            </p>
                                            <ol>
                                                <li value="1">User sends creds to VPN device connected to Okta via RADIUS</li>
                                                <li value="2">VPN device forwards user creds to Okta RADIUS Server Agent</li>
                                                <li value="3">Okta RADIUS Server Agent uses Okta APIs to validate credentials</li>
                                                <li value="4">Okta validates user credentials</li>
                                                <li value="5">Okta APIs respond with MFA challenge based on configured policy</li>
                                                <li value="6">RADIUS Server Agent sends challenge to VPN device</li>
                                                <li value="7">VPN device presents RADIUS challenge to end user</li>
                                                <li value="8">VPN device sends RADIUS challenge response to Okta RADIUS</li>
                                                <li value="9">Okta RADIUS sends response to Okta APIs to be validated</li>
                                                <li value="10">Okta APIs respond with correct/incorrect for the response</li>
                                                <li value="11">Okta RADIUS sends ACCEPT or REJECT to the VPN device</li>
                                            </ol>
                                        </div>
                                    </div>
                                    <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Recommended Deployment Architectures</a></span>
                                        <div class="MCDropDownBody dropDownBody">
                                            <p class="note">See the RADIUS Server Agent Throughput And Scaling section for sizing guidance</p>
                                            <h2>Active-Passive failover behind a VPN such as Cisco ASA</h2>
                                            <p>This is the simplest deployment model and is sufficient for environments that don’t have high throughput requirements beyond what a single active Okta RADIUS Server Agent can provide.</p>
                                            <p>In this approach, configure one Okta RADIUS Server Agent as the active server on the VPN device, along with another Okta RADIUS Server as passive failover. The total throughput is capped by what a single RADIUS Server Agent can achieve.</p>
                                            <h2>Active-Active behind a load balancer – high throughput</h2>
                                            <p class="note">Some examples and terms assume F5 load balancer with Cisco ASA VPN <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">client<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>Essentially, a client is anything that talks to the Okta service. Within the traditional client-server model, Okta is the server. The client might be an agent, an Okta mobile app, or a browser plugin. </span></a></p>
                                            <p>For best throughput and availability we recommend deploying two or more Okta RADIUS Server Agents behind a load balancer. This approach allows horizontal scaling by adding additional RADIUS Server Agents into the load balancing pool and distributing the traffic load evenly between them. Number of RADIUS Server Agents will depend on the anticipated volume and peak transactions per minute.</p>
                                            <ul>
                                                <li value="1">Virtual networks</li>
                                                <p>Set up a separate Virtual Server for each device sending RADIUS requests. Create a separate server pool for each virtual server.</p>
                                                <li value="2">Session Persistence</li>
                                                <p>Load balancing should be done using session persistence (aka sticky sessions) based on the end-user’s VPN client or IP to optimize performance, especially in situations where waiting for user input to 2FA challenge is done off-band (e.g. Okta Verify w/ Push). The Okta RADIUS Server Agent handles de-duplication of requests from the originating RADIUS client, however, if those are spread between multiple agents, they are only de-duplicated at Okta service side resulting in unnecessary load. See Load Balancer Session Persistence Notes below for more detail.</p>
                                                <p>Recommended configuration for stickiness is generally using the Calling-Station-ID combined with the Framed-IP. Calling-Station-ID for many VPNs will be the client IP address of the originating client. If a different RADIUS attribute is storing the client IP address, then configure the load balancer to use that attribute instead.</p>
                                                <li value="3">Load balancing method</li>
                                                <p>We recommend setting load balancing method of Least Connections where available to distribute load on active RADIUS Server Agents..</p>
                                                <li value="4">Health check</li>
                                                <p>Use load balancer health check function with synthetic logins to ensure that in case of RADIUS Server Agent issue a failover occurs seamlessly and with minimum user impact. Each Virtual Server should have it’s own health check over its respective port. To configure your load balancer or RADIUS client to do health checks, create a user account that will be used only for this purpose. We recommend:</p>
                                                <ol>
                                                    <li value="1">Create a user with no assigned <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">groups<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>Groups allow you to organize your end users and the apps they can access. Assigning apps to large sets of end users is made easier with groups.</span></a>, no application access, and no privileges beyond a basic user account.</li>
                                                    <li value="2">Create a strong, unique password for the health check user account</li>
                                                    <li value="3">Create a custom RADIUS <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">app<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An abbreviation of application. Essentially, it is a web-based site used to perform any number of specific tasks, and requires authentication from end users by signing in.</span></a> for triaging this inbound healthcheck</li>
                                                    <li value="4">Assign this user to the RADIUS app (thereby allowing access)</li>
                                                </ol>
                                                <p>The purpose of this account is to validate that the RADIUS client can access the Okta service and field an authentication request appropriately. Typically health check should only involve primary authentication, since second-factor transactions usually require some form of user input or dynamic response.</p>
                                                <p>Set load balancer to remove RADIUS server out of rotation after 2 consecutive failures. Set load balancer to add server back in rotation after 1 successful response from server</p>
                                                <li value="5">Load Balancer high availability</li>
                                                <p>For best overall system availability, consider a redundant system configuration for the load balancer to avoid a single point of failure. Please see load balancer vendor documentation for recommendations.</p>
                                            </ul>
                                            <p class="note">For F5’s overall recommendation for RADIUS load balancing, please refer to the <a href="https://www.f5.com/pdf/deployment-guides/iapp-radius-dg.pdf" target="_blank" title="F5 RADIUS Deployment Guide" alt="F5 RADIUS Deployment Guide">F5 RADIUS Load Balancing documentation</a>. 
                F5 supports an iApp for managing RADIUS volume. This iApp also supports automated healthchecks via synthetic transactions to ensure that the <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">end users<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>In Okta literature, we generally refer to "end users" as the people who have their own Okta home page (My Applications), using chiclets to authenticate into all of their apps. End users do not have any administrative control. When we refer to "users" we are generally referring to the individual(s) who have administrative control.</span></a> are able to authenticate.</p>
                                        </div>
                                    </div>
                                    <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Load Balancer Session Persistence Notes</a></span>
                                        <div class="MCDropDownBody dropDownBody">
                                            <h2>Use Session Persistence where possible</h2>
                                            <p>When deploying Okta RADIUS Server Agent with a load balancer, Okta recommends using session persistence (aka sticky sessions) based on the end-user’s VPN client or IP to optimize performance, especially in situations where waiting for user input to 2FA challenge is done off-band (e.g. Okta Verify w/ Push). The Okta RADIUS Server Agent handles de-duplication of requests from the originating RADIUS client. However, if the requests are spread between multiple agents, they are only de-duplicated at Okta service side resulting in unnecessary load for both the RADIUS Server Agents and the Okta Service; this extra load would also count against your rate limits on the Okta Service. Recommended configuration for stickiness is generally using the Calling-Station-ID combined with the Framed-IP. Calling-Station-ID for many VPNs will be the client IP address of the originating client. If a different RADIUS attribute is storing the client IP address, then configure the load balancer to use that attribute instead.</p>
                                            <h2>Caveats when Session Persistence not set up</h2>
                                            <p>While we recommend a load balancer as it provides high availability and horizontal scale, it is possible to deploy the RADIUS Server Agent behind a load balancer without persistence, and this is still preferable to not using a load balancer at all, but readers should be aware that this model will forfeit most of the benefits of request de-duplication Okta RADIUS Server Agent performs at the agent level.</p>
                                            <p>RADIUS uses connectionless UDP protocol and most clients will automatically resend requests on a periodic interval until they've received a response from the RADIUS Server Agent. If these "retries" get load balanced to different RADIUS Server Agents, each agent is going to be simultaneously doing the same work (processing the same RADIUS request), and the first one to get a response from Okta and send a response back to the client will "win".</p>
                                            <p>Normally the first RADIUS Server Agent to receive the original request will be the first to respond, because it will make the call to Okta and get the response back before a retry from the client is ever issued. However, when using Okta Verify with Push factor, the RADIUS Server Agent which receives the request will sit and poll Okta until the user confirms/denies the push request on their phone. During this time, the RADIUS client is likely to send retries of the same push MFA request. In this scenario, if the retries are sent to the same RADIUS Server Agent, then the agent is smart enough to recognize those as duplicate packets and drop them immediately. But if the retry is load balanced to a different RADIUS Server Agent, that agent will process the request as a net new request and initiate the push notification again. In order to minimize the effects of this behavior, Okta recommends that you set the Radius client retry interval to 30 seconds or higher if you deploy in a load-balanced environment that does not support stickiness. This generally gives the end-user enough time to receive the push notification and respond to it before the RADIUS client starts sending retries.</p>
                                            <p>Another possibility for race conditions (in the absence of load balancer persistence) is if a particular RADIUS Server Agent becomes backlogged with a large queue of requests. This can happen if there are not enough worker threads configured on the agent, or if those threads are all consumed by long-running requests such as Okta Verify with Push or slow responses from the Okta service such as where the Okta service has to round-trip back into your on-prem Active Directory agent in order to authenticate the user, and then respond back to the RADIUS Server Agent which then has to respond back to the RADIUS client. In this case, retries again are a concern because if they are load-balanced to other agents, it depends on which agent gets around to processing the request first. Again this is generally safe no matter which agent "wins", but it will be harder to debug the system as a whole.</p>
                                        </div>
                                    </div>
                                    <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Throughput And Scaling</a></span>
                                        <div class="MCDropDownBody dropDownBody">
                                            <p>The benchmarking results below can be used to determine the type of server (or servers) needed to support the peak authentication-events per minute your environment is being designed to accommodate.</p>
                                            <p>The Okta RADIUS Server Agent has been benchmarked on an AWS t2.medium instance (see <a href="https://aws.amazon.com/ec2/instance-types/" target="_blank">https://aws.amazon.com/ec2/instance-types/</a>), which represents a modest baseline of hardware specs (2 vCPU cores, 4GiB memory). The benchmark was performed at Okta RADIUS Server Agent default settings, which are typically suitable for most customers.</p>
                                            <p>These benchmarks were run using JMeter to simulate a real end-user login flow via the Web VPN login (browser) &gt; Cisco ASA &gt; RADIUS Server Agent &gt; Okta.</p>
                                            <p>System specification: Amazon EC2 t2.medium (2 vCPU, 4 GiB memory), Windows Server 2012, Okta RADIUS Server Agent v.2.7.0 (thread count: 15, connection pool size: 20)</p>
                                            <table style="width: 100%;">
                                                <col />
                                                <col />
                                                <col />
                                                <col />
                                                <col />
                                                <tbody>
                                                    <tr>
                                                        <td>Arrival Rate (per second)</td>
                                                        <td>Factor</td>
                                                        <td>Error rate % (Primary/MFA)</td>
                                                        <td>CPU % (peak)</td>
                                                        <td>Memory Use MB (peak)</td>
                                                    </tr>
                                                    <tr>
                                                        <td>6.5</td>
                                                        <td>Okta Verify w/ Push</td>
                                                        <td>0 / 0</td>
                                                        <td>3</td>
                                                        <td>20</td>
                                                    </tr>
                                                    <tr>
                                                        <td>25</td>
                                                        <td>Security Question</td>
                                                        <td>0 / 0</td>
                                                        <td>3</td>
                                                        <td>20</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <p class="note">The RADIUS Agent has a pool of worker threads and accepts incoming requests via a queue. Because the throughput depends on a lot of factors both internal and external to the agent (how many authentication threads are in the worker pool, how long each request to the Okta service takes, how long an end-user takes to respond to a push MFA notification, etc.), actual results can vary. It is important to test throughput in your own deployment and tune the agent according to how it performs in your own environment.</p>
                                            <p class="note">The RADIUS Agent connects to the Okta Service via REST APIs, and is subject to the same rate limits as any other HTTP client. If your capacity requirements are high, you can horizontally scale by adding additional RADIUS agents and spreading load between them, but note that they will each count independently against your total allowed API calls on the Okta Service. See https://help.okta.com/en/prev/Content/Topics/Security/API.htm#api_rate_limiting for more information. If the RADIUS Agent is rate limited, it will return an ACCESS-REJECT response for those requests.</p>
                                        </div>
                                    </div>
                                    <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Troubleshooting Common RADIUS Issues</a></span>
                                        <div class="MCDropDownBody dropDownBody">
                                            <p>Problem: The RADIUS Server Agent will not install</p>
                                            <ul>
                                                <li value="1">Verify Windows version, 2008 is not supported! Windows 2008r2 or higher is required for Okta RADIUS. Windows Server 2012, 2012r2, and 2016 do work well.</li>
                                                <li value="2">Use the full Okta URL under “Custom” instead of just subdomain under “Production” in the installer.</li>
                                                <li value="3">Check for the presence of a proxy server, the RADIUS Server Agent installer is sensitive about proxies</li>
                                                <li value="4">Check for a SSL interception device like a Palo Alto or FireEye. This is related to certificate pinning and affects all agents.</li>
                                                <li value="5">Try a different server in the environment just to eliminate any local machine issues.</li>
                                                <li value="6">Make sure there are no leftover files under c:\program files (x86)\Okta\Okta RADIUS\ from a previous failed install.</li>
                                                <li value="7">Check Windows services.msc to make sure there isn’t a bad Okta RADIUS service leftover from a previous install (rare).</li>
                                                <li value="8">Try another version of the RADIUS Server Agent like like the newest EA version.</li>
                                            </ul>
                                            <p>Problem: VPN device can’t reach RADIUS Server Agent</p>
                                            <ul>
                                                <li value="1">The RADIUS Server Agent is running but the RADIUS client device cannot reach it (note: different than failing logins)</li>
                                                <li value="2">Check the Okta radius logs under C:\Program Files (x86)\Okta\Okta RADIUS Agent\current\logs\ to see if any connections are being made. Any connection, even failed ones, should show up.</li>
                                                <li value="3">Double check the server name/server IP entered into the VPN device, just to make sure it was keyed in correctly.</li>
                                                <li value="4">Verify the status of the Windows firewall on the Okta RADIUS Server Agent server to make sure it is not blocking the connection.</li>
                                                <li value="5">Verify that the VPN device and the server can reach each other via ping or ask for a network <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">admin<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An abbreviation of administrator. This is the individual(s) who have access to the Okta Administrator Dashboard. They control the provisioning and deprovisioning of end users, the assigning of apps, the resetting of passwords, and the overall end user experience. Only administrators have the Administration button on the upper right side of the My Applications page.</span></a> to verify network connectivity.</li>
                                                <li value="6">Configure the RADIUS server using the IP address instead of the hostname. There are networks where DNS is limited and hostnames will not resolve.</li>
                                                <li value="7">Determine if network layer issues are preventing connection with network engineer (NTRADPing can be helpful here).</li>
                                            </ul>
                                            <p>Problem: Correct credentials fail to authenticate</p>
                                            <ul>
                                                <li value="1">The RADIUS Server Agent is rejecting valid login attempts</li>
                                                <li value="2">Verify the user is assigned to the Generic RADIUS App in Okta.</li>
                                                <li value="3">Verify the user is enrolled in MFA.</li>
                                                <li value="4">Verify the shared secret on both the Okta RADIUS Server Agent and on the VPN device. A mismatch will cause all authentications to fail.</li>
                                                <li value="5">Check the local RADIUS logs.</li>
                                                <li value="6">Also look for any errors that could indicate the API token expired.</li>
                                                <li value="7">If you see a malformed username in the logs, like the user sent “bob” but the log shows a “Á” this indicates that the server is using MSCHAPv2 to encode the username. Check the VPN device configuration to make sure only PAP authentication is enabled.</li>
                                                <li value="8">Check the Okta syslog to see why the connection was rejected.</li>
                                                <li value="9">Check VPN device for any settings that could/would restrict login.</li>
                                            </ul>
                                            <p>Problem: User not prompted for preferred factor</p>
                                            <ul>
                                                <li value="1">The server or client doesn’t support RADIUS challenge</li>
                                                <li value="2">OpenVPN server does support RADIUS challenge but the free client that is included with it does not support the method and fails.</li>
                                                <li value="3">Some versions of Cisco’s AnyConnect VPN client have issues with challenge. It is sporadic and upgrading to the latest version usually fixes it.</li>
                                                <li value="4">VMWare View prior to version 5.1 does not support RADIUS challenge.</li>
                                                <li value="5">Potential workaround: Use Okta RADIUS in OTP only mode.</li>
                                                <li value="6">https://support.okta.com/help/articles/Knowledge_Article/24434913-Installing-the-Okta-RADIUS-Agent#2FA</li>
                                                <li value="7">When a RADIUS Server Agent is in OTP only mode it is no longer responsible for password authentication. The agent is expecting a username and a token value to be passed by the server. Okta checks the token value against all registered methods configured for the account (OV, Google, RSA, etc) and, if one matches, it allows the connection. Push is also supported.</li>
                                                <li value="8">This is not true two-factor auth unless it is paired with AD/LDAP auth! This may or may not be a concern.</li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />RADIUS Logging</a></span>
                                        <div class="MCDropDownBody dropDownBody">
                                            <p>RADIUS logs are helpful when troubleshooting</p>
                                            <ul>
                                                <li value="1">C:\Program Files (x86)\Okta\Okta RADIUS Agent\current\logs</li>
                                                <p>okta_radius.log contains authentication messages, errors, etc.</p>
                                                <li value="2">Okta Syslog</li>
                                                <p>The Okta logs will let you know if we are passing the credentials to an AD agent.</p>
                                                <li value="3">Device logs (Cisco/F5/Netscaler/etc)</li>
                                                <p>Look for keywords, such as username used to authenticate via RADIUS, and then error messages or warnings.</p>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <div data-sticky-container="" id="jW3dPciqyE6sHy_JpZfgUQ">
                                        <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="jW3dPciqyE6sHy_JpZfgUQ:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="only screen and (min-width: 1280px)">
                                            <ul class="nocontent menu _Skins_okta_side_menu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/BrowseSequences/radius_agent.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>