<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Jeanette Smith" MadCap:conditions="Primary.review-only">
    <head><title>ServiceNow Migration Guide | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
        <meta name="description" content="Simplify ServiceNow user management with Okta’s ServiceNow UD migration for Universal Directory, and eliminate the deprecated ServiceNow plugin." />
    </head>
    <body>
        <p style="text-align: center;">
            <img src="../../../Resources/Images/okta-servicenow.png" />
        </p>
        <h1>ServiceNow UD Migration Guide</h1>
        <hr />
        <h2>OVERVIEW</h2>
        <p>This document provides instructions to migrate your existing ServiceNow integration to use Universal Directory (UD)</p>
        <hr />
        <h2>WHAT'S&#160;NEW</h2>
        <p>The following features are new for ServiceNow UD</p>
        <ul>
            <li>Support for ServiceNow Geneva version and above</li>
            <li>User Schema Discovery support with unlimited custom attributes</li>
            <li>Flexible user attribute mapping support</li>
            <li>The Okta ServiceNow plugin is no longer required for provisioning</li>
        </ul>
        <hr />
        <h2>BEFORE YOU BEGIN</h2>
        <p>You need to know the settings are you using for your current ServiceNow app instance:</p>
        <ul>
            <li>
                <MadCap:xref href="#Determin">Determine your current ServiceNow configuration</MadCap:xref>
            </li>
        </ul>
        <p>You should configure your new ServiceNow UD app instance to be as close to your current ServiceNow instance as possible:</p>
        <ul>
            <li>
                <MadCap:xref href="#Configur">Configure a new ServiceNow UD&#160;app instance</MadCap:xref>
            </li>
        </ul>
        <p>Depending on how your current ServiceNow app integration is set up,  select the appropriate migration instructions:</p>
        <ul>
            <li>
                <MadCap:xref href="#Migratio">Migration steps if your current ServiceNow app is configured with SWA&#160;SSO</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="#Migrati">Migration steps if your current ServiceNow app is configured with SAML SSO</MadCap:xref>
            </li>
        </ul>
        <hr />
        <h2>PROCEDURES</h2>
        <p>In order to migrate your existing ServiceNow integration to use&#160;UD, you need to configure a new instance, configure it to be as close as possible to your existing ServiceNow app instance, transfer your existing users to it, and finally copy over any existing mappings you may have. Here are the steps required: </p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><a name="Determin"></a>Determine your current ServiceNow configuration</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <ol>
                    <li>In Okta, go to your ServiceNow - Eureka and later releases app instance.</li>
                    <li>Select the <b>Sign On</b> tab for this app and check the following:</li>
                    <ul>
                        <li><b>SSO mode</b>: Either <b>SWA</b> or <b>SAML</b>. The same mode must be used for your new ServiceNow UD app.</li>
                        <li>For SWA configured apps, also check the <b>Application username format</b>. The same value must be also be used for your new ServiceNow UD app.</li>
                    </ul>
                    <li>
                        <p>Select the <b>Provisioning</b> tab and <b>To Apps</b> in the left nav, make note of the features that are enabled. You will need to enable the same features for your new ServiceNow UD app to avoid missing or overwriting user's data, or you may enable all provisioning feature if you want to manage all user's data from Okta:</p>
                        <p>IMPORTANT:</p>
                        <ul>
                            <li>
                                <p>If you have the <b>Sync Password</b> feature <i>disabled</i> for your existing ServiceNow app, it means you may allow end-users to set their passwords depending upon the setting you select under Secure Web Authentication on the <b>Sign On</b> tab.</p>
                            </li>
                            <ul>
                                <li>
                                    <p><b>Administrator sets username and password</b>: In this case you need to manually enter passwords for all migrated users. Okta recommends that you enable this feature before migration, this will avoid having to manual enter passwords for all migrated users.</p>
                                </li>
                                <li>
                                    <p><b>User sets username and password</b>: In this case, following migration, your end-users must enter  valid usernames and passwords they are using for the current ServiceNow SWA app. See <MadCap:xref href="#Migratio">Migration steps if your current ServiceNow app is configured with SWA&#160;SSO</MadCap:xref>.</p>
                                </li>
                                <li>
                                    <p><b>Administrator sets username, user sets password</b>:&#160;In this case, after migration, your end-users must enter valid passwords they are using for the current ServiceNow SWA app. See <MadCap:xref href="#Migratio">Migration steps if your current ServiceNow app is configured with SWA&#160;SSO</MadCap:xref>.</p>
                                </li>
                            </ul>
                            <li>
                                <p>If you have the <b>Update user attributes</b> feature <i>disabled</i> for your existing ServiceNow app, it means you may have some unsynchronized users, which can be missed during migration. In case you have some users with updated profiles in ServiceNow, for example an updated email address, these users cannot be auto-confirmed during import. In order to migrate such users they will have to be manually confirmed.</p>
                            </li>
                            <li>
                                <p>If you have the <b>Deactivation</b> feature <i>disabled</i> for your existing ServiceNow app, it means you may run into some issues during migration users for your new ServiceNow UD instance. In case you have some un-assigned users from your existing ServiceNow app, but who are not actually deactivated on ServiceNow side, these users would be auto-confirmed for the new ServiceNow UD app. You can manually un-assign such users after migration manually.</p>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <p>Open the <b>Profile Editor</b> and locate your current ServiceNow app and check the mappings you have, you will need to copy these to your new ServiceNow UD app. If you have custom mappings, these will also need to be copied.</p>
                    </li>
                </ol>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><a name="Configur"></a>Configure a new ServiceNow UD&#160;app instance</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <ol>
                    <li>
                        <p>In Okta, select the <b>Application</b> tab, then click <b>Add Application</b>:</p>
                    </li>
                    <li> Locate <b>ServiceNow UD</b> then click <b>Add</b>:</li>
                    <li>
                        <p>Enter the <b>Base URL</b> for your ServiceNow tenant, then click <b>Next</b>:</p>
                    </li>
                    <li>
                        <p>Select the same <b>SIGN ON METHOD</b> as your current ServiceNow - Eureka app instance, then click <b>Done.</b></p>
                    </li>
                    <li>
                        <p>Configure the <b>SSO mode</b> with the same settings as your current ServiceNow - Eureka instance. See <MadCap:xref href="#Determin">Determine your current ServiceNow configuration</MadCap:xref>.</p>
                    </li>
                    <li>
                        <p>Select the <b>Provisioning</b> tab and configure API Integration.</p>
                    </li>
                    <li>
                        <p>Select <b>To App</b> in the left nav, then click <b>Go to Profile Editor</b>:</p>
                    </li>
                    <p><b>Note</b>: If you have the <b>Location</b> attributes in your current Service Now - Eureka app, you need to add it to the new ServiceNow UD app as follows:</p>
                    <p>Click <b>Add Attribute</b> , select the <b>Location</b> attribute, then click <b>Save</b>:</p>
                    <li> Click <b>Map Attributes</b>, then navigate to <b>Okta to ServiceNow UD.</b></li>
                    <li> Copy and paste mappinsg from you current Service Now - Eureka for all duplicated attributes, then click <b>Save Mappings</b>:</li>
                    <p><b>Note</b>: If you have you current ServiceNow app configured with Active Directory, you need to also copy and paste mappings for all attributes to be the same as for your current app.</p>
                </ol>
                <p><b>Notes</b>:</p>
                <p>If you have custom mappings for your current ServiceNow app such as <b>adUser.tshirt &gt; oktaUser.title &gt; snowUser.title</b> and have configured <b>tshirt</b> as the column name for the <b>title</b> attribute in ServiceNow Provisioning, you need to configure the same mapping for your new app instance as follows:</p>
                <ol>
                    <li>
                        <p>Import user attributes from ServiceNow.</p>
                    </li>
                    <li>
                        <p>Add <b>tshirt</b> attribute to user profile.</p>
                    </li>
                    <li> Configure mapping like <b>adUser.tshirt &gt; oktaUser.tshirt &gt; snowUser.tshirt</b>.</li>
                </ol>
                <p>For example, let's say there is a T-shirt Size attribute in the Okta profile. And the ServiceNow <b>title</b> attribute is not used by the org today (current behavior).</p>
                <ol>
                    <li>
                        <p>Mappings are set to <b>user.tshirt → ServiceNow appuser.title</b></p>
                    </li>
                    <li> In the provisioning section of the ServiceNow app, <b>tshirt</b> is configured as the column name that <b>title</b> maps to.</li>
                    <p>Mappings will now look like:</p>
                    <p>&#160;</p>
                </ol>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><a name="Migratio"></a>Migration steps if your current ServiceNow app is configured with SWA&#160;SSO</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <h2>Administrator Actions</h2>
                <ol>
                    <li>Disable all provisioning features for your existing ServiceNow app.</li>
                    <li>Configure new ServiceNow UD app instance. See <MadCap:xref href="#Configur">Configure a new ServiceNow UD&#160;app instance</MadCap:xref>.</li>
                    <li>Depending on how your current ServiceNow app integration is configured, we recommend two separate flow of migrations:
					
					<ul><li><p><MadCap:xref href="#Migrate">Migrate using Group assignment.</MadCap:xref></p></li><li><p>Import and auto-confirm</p></li></ul></li>
                </ol>
                <p>&#160;</p>
                <p>You can use group assignment if your current setting satisfies all of the following criteria. Otherwise, you'll need to switch to the migration flow using import and auto-confirm</p>
                <p><b>Criteria:</b>
                </p>
                <p>1. You have all users assigned via group level for your current ServiceNow - Eureka app instance</p>
                <p><b>Note</b>: You should understand that the values of some attributes could be overwritten for all users during the migration, if this is not critical for you, go ahead to the migration flow using Group assignment.</p>
                <p>I meet the criteria: <MadCap:xref href="#Migrate">Migrate using Group assignment.</MadCap:xref></p>
                <p>I don't meet the criteria: <MadCap:xref href="#Migrate2">Migrate using Import and auto-confirm.</MadCap:xref></p>
                <h3><a name="Migrate"></a>Migrate using Group assignment.</h3>
                <p>Contact Okta Support to ensure your organization has the APPLICATION_ENTITLEMENT_POLICY feature flag enabled. This feature allows you to map user attributes instead of static values in group assignments (for example, <b>user.department</b> instead of <b>Financial</b> for all users in group).</p>
                <p>Before migration, you may want to try a test migration:</p>
                <p><b>If your current ServiceNow app is not configured with Active Directory and have mapping for all attributes to Okta user profile</b>
                </p>
                <ol>
                    <li>Create a new test group in Okta.</li>
                    <li>Create a new test user in Okta and  set values for attributes mapped to ServiceNow(manager, department, cost center etc).</li>
                    <li>Add this user to the test group.</li>
                    <li>Assign the test group to your current ServiceNow app (make sure you have provisioning features enabled) and check the user is created in ServiceNow side with the correct attributes values.</li>
                    <li>Disable provisioning for your current ServiceNow app.</li>
                    <li>Assign the test group to your new ServiceNow UD app and set the same values for mapped to Okta user profile attributes in dropdown lists</li>
                    <li>Check the user is linked and the user's profile is updated in ServiceNow only for attributes that don't exist in the old Service Now app.</li>
                </ol>
                <p style="font-weight: bold;">If your current ServiceNow app is configured with Active Directory:</p>
                <ol>
                    <li>Create a new test group in Active Directory.</li>
                    <li>Create a new test user in Active Directory and set up all attributes that are mapped from Active Directory to ServiceNow (manager, department, cost center etc).</li>
                    <li>Add this user to the test group.</li>
                    <li>Go to Okta and perform an import from Active Directory</li>
                    <li>Confirm the test user exists in Okta.</li>
                    <li>Assign the test group with test user to your old ServiceNow app.</li>
                    <li>Make sure the user is created with correct attribute values.</li>
                    <li>Disable provisioning for your old ServiceNow app.</li>
                    <li>Assign the test group to your new Service NowUD app and set the same value for mapped from Active Directory attributes on dropdown lists.</li>
                    <li>Go to ServiceNow and check that users are linked, the user's profile is updated in Service Now side only for attributes that don't exist in your old ServiceNow app.</li>
                </ol>
                <p><b>Notes</b>:</p>
                <p>If you ran into issues during your test migration, check the mappings for inconsistencies, correct them and try again. If the test migration is successful, you can start the process of migration for all groups.</p>
                <p>Be careful, we can not guarantee 100% success of the migration for all users without loss and rewriting the user's profile.</p>
                <p>Now if testing is complete, you can continue with migration:</p>
                <ol>
                    <li>Identify one or more group(s) in Okta which collectively include all users assigned to your current ServiceNow integration.</li>
                    <li>Make sure you have disabled provisioning features for your current ServiceNow app.</li>
                    <li>Go to new ServiceNow UD app and assign group.</li>
                    <li>During assignment, set  all group level attributes accordingly.</li>
                </ol>
                <p>Now that you have the new ServiceNow UD app set up and assigned, we recommend you either <MadCap:xref href="#Hide">Hide</MadCap:xref> or <MadCap:xref href="#Deactiva">Deactivate</MadCap:xref> your old ServiceNow application tile from the end-user Okta console to avoid confusion. To do so:</p>
                <h4><a name="Hide"></a><b>Hide</b>
                </h4>
                <ol>
                    <li>Open the old ServiceNow app, then select the <b>General</b> tab.</li>
                    <li>Click <b>Edit</b>.</li>
                    <li>Check <b>Do not display application icon to users</b>.</li>
                    <li>Click <b>Save</b>.</li>
                </ol>
                <h4><a name="Deactiva"></a><b>Deactivate</b>
                </h4>
                <p>In this case, all previously imported groups for old ServiceNow  app will be deleted in Okta:</p>
                <ol>
                    <li>Open the old ServiceNow app, and locate the <b>Active</b> button:</li>
                    <li>Click on it and select <b>Deactivate</b>.</li>
                    <li>Click <b>Save</b>.</li>
                </ol>
                <p>End-User Migration flow</p>
                <p>After you have assigned the new ServiceNow UD app (new application tile), all your end users need to do is click on the new application tile on their console. If they are able to login to ServiceNow they don't need to do anything else.</p>
                <h3><a name="Migrate2"></a>Migrate using Import and auto-confirm.</h3>
                <p>Before migration, you may want to try a test migration:</p>
                <ol>
                    <li>In your existing ServiceNow UD app instance, select the <b>Provisioning</b> tab, then select  <b>To Okta</b> in the left nav. In the <b>User Creation &amp; Matching</b> section select <b>Imported user is an exact match to Okta user if</b> - <b>Email matches</b>:</li>
                    <li>Import new users in your new ServiceNow UD instance. Make sure all users are matches and could be linked to existing users.</li>
                    <p><b>Notes</b>:</p>
                    <ul>
                        <li>If you have the <b>Push Profile</b> feature disabled for your existing ServiceNow app, you be missing some users after migration to the new Service Now UD app. You need to manually confirm them after migration.</li>
                        <li>If you have the <b>Deeactivation</b> feature disabled for your existing ServiceNow app,  you may  find some matches for users who aren't assigned to your current  ServiceNow app.  You should manually un-assign these users after migration.</li>
                        <li>If you have different users in ServiceNow with the same email address you may encounter mismatch issues. In this case, see <MadCap:xref href="#Migratin">Migrating users with the same email address in ServiceNow</MadCap:xref></li>
                    </ul>
                    <li> Confirm test user and check:<ul><li><p>User profile in Okta - it shouldn't be updated</p></li><li><p>User profile in ServiceNow - it should be updated only for those attributes which aren't supported by the old ServiceNow app</p></li><li><p>Try to sign in to Okta with the test user</p></li><li><p>Try to sign in with test user to ServiceNow via the application on the end user console</p></li></ul></li>
                </ol>
                <p><b>Notes</b>:</p>
                <p>If you encountered issues during your test migration, check the mapping/SSO mode/Application username format for inconsistencies, correct them to be the same as for your current ServiceNow app and try again. If the test migration is successful, you can start the process of migration for all users.</p>
                <p>Be careful, we can not guarantee 100% success of the migration for all users without loss and rewriting the user's profile.</p>
                <p>Now that testing is complete, you may continue with migration:</p>
                <ol>
                    <li>In your ServiceNow UD app instance, select the <b>Provisioning</b> tab, then select <b>To Okta</b> in the left nav. Then in the <b>User Creation &amp; Matching</b> section select <b>Imported user is an exact match to Okta user if</b> - <b>Email matches</b> and <b>Auto-confirm exact matches</b>:</li>
                    <li>Import new users in your new ServiceNow UD instance. All existing user should be auto-confirmed. Also all groups would be imported as well for new ServiceNow UD, so you may have duplicate groups. </li>
                    <li>Additional action required depending upon how your old ServiceNow app was configured:
                    <ul>
<li><p>If you have the <b>Push Profile</b> feature <i>disabled</i> for your old ServiceNow app and you miss some users during migration to the new ServiceNow UD app. You need to manually confirm them. </p></li>
		


			
              <li>If you have "Administrator sets username and password" for your existing Service Now app - you need manually entering password for all migrated users:</li>
                    <li>Go to Assignment → select user→ click Edit button → Set password</li>
                    <li>If you have "User sets username and password" - your "end-user" must enter the valid username and password he is using for current ServiceNow SWA app, after migration. See End-User migration flow</li>
                    <li>If you have "Administrator sets username, user sets password" -  your "end-user" must enter the valid password he is using for current ServiceNow SWA app, after migration. See End-User migration flow</li>
                    <li>After finishing with import we suggest two flows for Hide or deactivate the old ServiceNow  app chiclet from end-user Okta dashboard</li>
                </ol>
                <p>Now that you have the new ServiceNow UD app set up and assigned, go ahead and hide or delete the existing ServiceNow app chiclet from end-user Okta dashboards to avoid confusion. To do so,</p>
                <p>Hide:</p>
                <p>Open the ServiceNow, and go to the General tab</p>
                <p>Click Edit</p>
                <p>Check Do not display application icon to users.</p>
                <p>Hit Save</p>
                <p>Deactivate(In this case all previouslly imported group for old ServiceNow  app should be deleted on okta side:</p>
                <p>Open the ServiceNow, and on the top find "Active" button:</p>
                <p>Click on it and select "Deactivate"</p>
                <p>Hit Save</p>
                <p>End-User migration flow</p>
                <p>(warning) In these instructions, "you" refers to the end-user.</p>
                <p>After your Okta admins have assigned you the new ServiceNow UD app (new chiclet), you have to follow a simple steps.</p>
                <p>First of all you need to click on the chiclet, enter your username and passwor or just password it depend how you old Service Now app is configured.</p>
                <p>If you're able to login to ServiceNow you're all set!</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><a name="Migrati"></a> Migration steps if your current ServiceNow app is configured with SAML SSO</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>(This is the Drop-down text)</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><a name="Migratin"></a>Migrating users with the same email address in ServiceNow</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>(This is the Drop-down text)</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Migration for Pushed groups </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>(This is the Drop-down text)</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
    </body>
</html>