define({"0":{y:0,u:"../Content/docs_home.htm",l:-1,t:"docs_home",i:0.00232079126367638,a:""},"1":{y:0,u:"../Content/Topics/betas/closed/connector-builder/connector-builder.htm",l:-1,t:"About Workflows Connector Builder in Beta",i:0.00232079126367638,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Connector Builder is a no-code development tool for creating connectors on the Workflows platform.  It leverages the same Workflows functionality used by Okta customers to turn their ..."},"2":{y:0,u:"../Content/Topics/betas/closed/connector-builder/about-building-blocks.htm",l:-1,t:"About the building blocks of a connector",i:0.00239969881056065,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Connectors Connectors define operations that can be enacted by Okta Workflows in third-party applications or Okta itself. A connector can have events or actions, or both, that contain ..."},"3":{y:0,u:"../Content/Topics/betas/closed/connector-builder/about-connections.htm",l:-1,t:"About connections",i:0.00634132658496306,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Connections are saved credentials that can be used to simplify the testing of Flows. For many services, it is good practice to test your Flows using multiple sets of credentials.  ..."},"4":{y:0,u:"../Content/Topics/betas/closed/connector-builder/authentication.htm",l:-1,t:"About authentication",i:0.00350119690860137,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Authentication is where you define the parameters that are needed to create a connection to your service.  Once defined, the end user will be presented with a New Connection dialog to ..."},"5":{y:0,u:"../Content/Topics/betas/closed/connector-builder/about-flows.htm",l:-1,t:"About Flow types in Connector Builder",i:0.00781239249509553,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Action Use action Flows to create action cards that allow end users to perform an “action” against a service. Once built, this is the only Flow type in Connector Builder with which ..."},"6":{y:0,u:"../Content/Topics/betas/closed/connector-builder/about-dynamic-fields.htm",l:-1,t:"About dynamic options and fields",i:0.00364455839257545,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Connector Builder gives you the ability to return a list of options for a single dropdown field or return a list of input or output field that are specific to a user\u0027s environment in a ..."},"7":{y:0,u:"../Content/Topics/betas/closed/connector-builder/about-functions.htm",l:-1,t:"About functions",i:0.00239969881056065,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  The Flows used to make a connector are built almost entirely of functions.  At a high level, functions are used for manipulating and generating data that gets passed between the ..."},"8":{y:0,u:"../Content/Topics/betas/closed/connector-builder/capia-cards.htm",l:-1,t:"About Custom API Action (CAPIA) cards",i:0.005858094064545,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  CAPIAs allow a connector to scale in front of development efforts.  They provide users the ability to hit any endpoint for an API, even if you haven\u0027t built out a specific action. For ..."},"9":{y:0,u:"../Content/Topics/betas/closed/connector-builder/get-started.htm",l:-1,t:"Get started",i:0.00239969881056065,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Create and store connectors within Connector Projects.  To begin creating a new connector: Click New Connector. Optionally, click CONNECTORS + in the upper left corner of Connector ..."},"10":{y:0,u:"../Content/Topics/betas/closed/connector-builder/settings-connection.htm",l:-1,t:"Create and edit the settings of the connection",i:0.00518347092435043,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Manage the basics of the branding for your cards on the Settings page. From the Overview tab, go to the Connector Settings page for your connector, and in the Connector Name field, ..."},"11":{y:0,u:"../Content/Topics/betas/closed/connector-builder/test-connections.htm",l:-1,t:"Test connections",i:0.00239969881056065,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  The Test Connections tab allows you to create and manage the connections that you\u0027ll use to build your connector Flows.  Connections that you create on this page will be available for ..."},"12":{y:0,u:"../Content/Topics/betas/closed/connector-builder/authentication_basic.htm",l:-1,t:"Build basic authentication",i:0.00424520824978694,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Basic authentication is a simple username and password scheme built into the HTTP protocol. Workflows sends HTTP requests with the Authorization header containing the word Basic ..."},"13":{y:0,u:"../Content/Topics/betas/closed/connector-builder/authentication-oauth2.htm",l:-1,t:"Build authentication with OAuth 2.0",i:0.00424520824978694,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  OAuth 2.0 is a protocol that allows you to grant limited access to resources on a third party site without having to expose your credentials to Workflows. Before beginning the OAuth ..."},"14":{y:0,u:"../Content/Topics/betas/closed/connector-builder/authentication-custom.htm",l:-1,t:"Build custom authentication",i:0.00424520824978694,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Custom authentication allows you to collect any information from the user that needs to be included in an API request.  A common example is the use of API Keys (api_key) that get ..."},"15":{y:0,u:"../Content/Topics/betas/closed/connector-builder/io-modal.htm",l:-1,t:"Use the IO Modal to add option fields to connector cards",i:0.00781239249509553,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  The IO Modal is where you define the options, inputs, and outputs of your connector cards.  To access the modal, click Add Options on a Connection Action card that begins a flow or on ..."},"16":{y:0,u:"../Content/Topics/betas/closed/connector-builder/io-modal-inputs-outputs.htm",l:-1,t:"Use the IO Modal to add input and output fields to connector cards",i:0.005858094064545,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  In addition to options fields, use the IO Modal to add inputs and outputs to your connector cards. Input fields Output fields Input fields Inputs are the fields on a card that accept ..."},"17":{y:0,u:"../Content/Topics/betas/closed/connector-builder/capia-httphelper.htm",l:-1,t:"Build an httpHelper Flow",i:0.0108375323926042,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  The httpHelper flow manages two things for each action that you’ll build in Connector Builder: authentication and any HTTP request.  This is implemented in support of the Don’t Repeat ..."},"18":{y:0,u:"../Content/Topics/betas/closed/connector-builder/capia-authping.htm",l:-1,t:"Build an _authping flow",i:0.0149320253815892,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  _authping is a system flow that allows the platform to “ping” an API and check for valid authorization.  This acts as a sort of health check that runs when the connector is first ..."},"19":{y:0,u:"../Content/Topics/betas/closed/connector-builder/capia-capia-card.htm",l:-1,t:"Build a CAPIA card",i:0.015092104585026,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  A CAPIA is an action card available on a connector that allows the end user to make an authenticated HTTP request to the service in question.  The base url is hard coded into the ..."},"20":{y:0,u:"../Content/Topics/betas/closed/connector-builder/revoke-method.htm",l:-1,t:"Build a _revoke Flow",i:0.0185485041373683,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  _revoke is a system Flow that allows a builder the ability to revoke an OAuth 2.0 (or other token based auth) token.  A connector’s  _revoke method is invoked when a connection is ..."},"21":{y:0,u:"../Content/Topics/betas/closed/connector-builder/test-flows.htm",l:-1,t:"Test your Flows",i:0.00634132658496306,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  You can run your Flows during development by clicking Test in the toolbar when editing a Flow.  The Test dialog will then allow you to select a saved connection or create a new one ..."},"22":{y:0,u:"../Content/Topics/betas/closed/connector-builder/connector-builder-flow-history.htm",l:-1,t:"Check Flow history",i:0.00634132658496306,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Flow History is one of the most important features of the Workflows platform, and is crucial to the Flow building process.  It’s used primarily for debugging while Flow building, but ..."},"23":{y:0,u:"../Content/Topics/betas/closed/connector-builder/deployment.htm",l:-1,t:"Deploy your Flows",i:0.00634132658496306,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  The Deployment tab is where builders can publish different versions of their connector to their associated Workflows tenant to test complete use cases or for use in production Flows. ..."},"24":{y:0,u:"../Content/Topics/betas/closed/connector-builder/developer-plan-limits.htm",l:-1,t:"About Workflows Developer Plan limits | Okta",i:0.00239969881056065,a:"About Workflows Developer Plan limits This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Access to Connector Builder for users who are not Okta Workflows customers is available through a Developer Plan. The plan is intended to offer ..."},"25":{y:0,u:"../Content/Topics/betas/closed/connector-builder/prepare-connector-documentation.htm",l:-1,t:"Prepare connector documentation",i:0.0159962653521594,a:"This is a Beta feature. Users of Connector Builder are subject to the  Okta Developer Edition Subscription Terms .  Every Workflows connector requires user documentation, and it must be included as part of the connector submission. The Okta Integration Network checks your documentation for general ..."},"26":{y:0,u:"../Content/Topics/Workflows/function-reference/functions.htm",l:-1,t:"Functions in Workflows",i:0.022675052838,a:"Functions in  Connector Builder Interact with, change, and control your data in Workflows using functions. API Connector Branching Control Date \u0026 Time Encryption Error Handling File Flow Control Flows Folders JSON JWT List Number Object Tables Text True/False URL XML API Connector Branching Control ..."},"27":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_authorization.htm",l:-1,t:"Authenticate with API Connector cards | Okta",i:0.00242907226486398,a:"Authenticate with API Connector cards Overview Use API Connector function cards to make authenticated basic, OAuth 2, or custom connections to third party services. Background If a prebuilt connector isn\u0027t available, use API Connector cards to make a request to a third-party service and parse the ..."},"28":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_errors.htm",l:-1,t:"HTTP Errors | Okta",i:0.00242907226486398,a:"HTTP Errors An error in an API Connector function typically corresponds to a standard HTTP error code returned by the API that you called. For example, if the API returns the status code 400, you get a \"Bad Request\" error. If the status code is 401, the error is \"Unauthorized.\" You can see a full ..."},"29":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_accept.htm",l:-1,t:"API Endpoint | Okta",i:0.00242907226486398,a:"API Endpoint API Endpoint allows you to create a Flow that is activated via a URL. Input Fields No input fields. Output Fields Output fields for the API Endpoint card are created by the user. There are three categories of output fields associated with the API Endpoint card: body Creating output ..."},"30":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_close.htm",l:-1,t:"Close | Okta",i:0.00242907226486398,a:"Close This function sends a response back to the caller and closes the HTTP connection, similar to Return or Return Raw, but also allows the Flow to continue execution afterward. This is useful for Flows that might not complete before the connection times out, after which the caller might call the ..."},"31":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_delete.htm",l:-1,t:"Delete | Okta",i:0.00242907226486398,a:"Delete Overview This API Connector function card performs a Delete request, returning the result of this request and the response headers. On input, the Delete card takes a required URL input and optional header, body, and query inputs. Input Fields URL(text): required URL for Delete request ..."},"32":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_get.htm",l:-1,t:"Get | Okta",i:0.00242907226486398,a:"Get Overview Performs an API Connector GET request, returning the result of this request and the response headers. On input, takes a required URL input and optional auth, header, and query inputs. Each optional input can either be modeled by a singular object-typed input or by multiple keys with the ..."},"33":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_post.htm",l:-1,t:"Post | Okta",i:0.00242907226486398,a:"Post Overview Performs an API Connector POST request, returning the result of this request and the response headers. On input, takes a required URL input and optional auth, header, body, and query inputs. Each optional input can either be modeled by a singular object-typed input or by multiple keys ..."},"34":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_put.htm",l:-1,t:"Put | Okta",i:0.00242907226486398,a:"Put Overview Performs an API Connector Put request, returning the result of this request and the response headers. On input, takes a required URL input and optional auth, header, body, and query inputs. Each optional input can either be modeled by a singular object-typed input or by multiple keys ..."},"35":{y:0,u:"../Content/Topics/Workflows/function-reference/HTTP/http_raw.htm",l:-1,t:"Raw Request | Okta",i:0.00414489347138662,a:"Raw Request Overview This method performs a raw HTTP request, allowing the Flow builder to control all aspects of the HTTP request.  This allows a Flow to call an XML service for example, or call an HTML service, or a number of other advanced usages.  The other API Connector functions are optimized ..."},"36":{y:0,u:"../Content/Topics/Workflows/function-reference/Branching/branching_assignif.htm",l:-1,t:"Assign If | Okta",i:0.00242907226486398,a:"Assign If Assign a value based on the true or false result of a conditional statement. If you have more than two potential output values, see  Lookup . Input Be sure to set the type of value a and value b to reflect how you would like the comparison to be done. For instance, the operator \"greater ..."},"37":{y:0,u:"../Content/Topics/Workflows/function-reference/Branching/branching_if.htm",l:-1,t:"If/Else | Okta",i:0.00552616555322258,a:"If/Else Use an If/Else conditional statement to determine the steps that should be followed by the Flow. When the condition you specify is evaluated, depending on whether the result is true or false, the Flow follows a specific sub-path of Action and Function cards prior to returning optional ..."},"38":{y:0,u:"../Content/Topics/Workflows/function-reference/Branching/branching_branch.htm",l:-1,t:"If/ElseIf | Okta",i:0.00242907226486398,a:"If/ElseIf Specify different actions to run based on multiple if and else if conditions (similar to Switch or Case in some programming languages). To specify different actions based on a single condition, you can use  If/Else  instead. This function card allows you to set the following: Conditions: ..."},"39":{y:0,u:"../Content/Topics/Workflows/function-reference/Branching/branching_lookup.htm",l:-1,t:"Lookup | Okta",i:0.00449380112376971,a:"Lookup Convert one value to another using a lookup table. For example, convert one web service code to another web service code or a department name to a contact email. Input Output Result: The result of the lookup. If an exact match is found for Value in the When Value Is column, then Result is set ..."},"40":{y:0,u:"../Content/Topics/Workflows/function-reference/Control/control_tonumber.htm",l:-1,t:"To Number | Okta",i:0.00242907226486398,a:"To Number This function card converts an input set of string of characters or numbers to a numerical value. Use this function card when you need to perform a type conversion in a flow. Input If the To Number function card cannot convert the string value, an error is returned. Output Example: If ..."},"41":{y:0,u:"../Content/Topics/Workflows/function-reference/Control/control_tostring.htm",l:-1,t:"To String | Okta",i:0.00242907226486398,a:"To String This function card converts a numerical value to a string. Use this function card when you need to perform a type conversion in a flow. Input If the To String function card cannot convert the numerical value, an error is returned. Output Example: If value is 123, output  is 123. If value ..."},"42":{y:0,u:"../Content/Topics/Workflows/function-reference/Control/control_typeof.htm",l:-1,t:"Type Of | Okta",i:0.00242907226486398,a:"Type Of This function card returns a type for an input value. Input Output  "},"43":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_add.htm",l:-1,t:"Add | Okta",i:0.00242907226486398,a:"Add Adds a multiple of a unit of time (e.g. seconds) from a starting date \u0026 time, returning the resulting date. Input  Output Examples If start date is 5-Sept-2016, add is 2 and units is weeks, then output will be 19-Sept-2016. If start date is 19-Sept-2016 9:00am, add is 8 and units is hours, then ..."},"44":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_fromiso.htm",l:-1,t:"Convert | Okta",i:0.00242907226486398,a:"Convert Converts a date and time to a variety of formats.  Input Output The input fields format and zone work only with the output field custom. See the  Date to Text  function for details and examples of how to generate custom formatted dates and times as text. Using the custom output field is ..."},"45":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_format.htm",l:-1,t:"Date to Text | Okta",i:0.07175762474613,a:"Date to Text Formats a date and time into a provided format in a specified timezone.  Input Output Format Codes Build the format for the date and/or time format you want using any combination of the following codes along with fixed characters like slashes and commas: D for day number (in the month) ..."},"46":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_diff.htm",l:-1,t:"Difference | Okta",i:0.00242907226486398,a:"Difference Returns the difference in time between two dates. Input Output All of the outputs express the full amount of time it will take to get to end date from start date in that unit. For example, if end date is exactly one day after start date, then the output value for days will be 1 and hours ..."},"47":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_epoch.htm",l:-1,t:"Epoch | Okta",i:0.00422450592475897,a:"Epoch Converts a date and time to the number of seconds that have elapsed since January 1, 1970 (midnight UTC/GMT) not counting leap seconds, which is the standard date format for some systems. See  UNIX  to use the number of milliseconds elapsed instead of seconds.  Input  Output Example ..."},"48":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_iso.htm",l:-1,t:"ISO | Okta",i:0.00242907226486398,a:"ISO Returns the corresponding ISO8601 string using UTC \"Z\" notation for a given date and time (not adjusted for local time zone).  This function is often unnecessary. When you drag a date and time object into any text input field, it will automatically convert to the ISO UTC \"Z\" notation format. If ..."},"49":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_now.htm",l:-1,t:"Now | Okta",i:0.0396132463064264,a:"Now Returns the current date and time in a variety of formats, all in UTC time (not adjusted for local timezone). Use the  Date to Text  function to adjust a date to a timezone. Output Example When it\u0027s 9:55 AM (and 25.670 seconds) in Los Angeles on September 9, 2016, the Now card outputs will have ..."},"50":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_subtract.htm",l:-1,t:"Subtract | Okta",i:0.00242907226486398,a:"Subtract Subtracts a multiple of a unit of time (for example, seconds) from a starting date and time and return the resulting date.  Input Output Examples If start date is 19-Sept-2016, subtract is 2 and units is weeks, then output will be 5-Sept-2016. If start date is 19-Sept-2016 5:00pm,  subtract ..."},"51":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_parse.htm",l:-1,t:"Text to Date | Okta",i:0.00242907226486398,a:"Text to Date Creates a date and time from the contents of text according to a specified format. For most standard formats, this function is not necessary. You can pass any standard date and time text into a date input and it will be converted automatically. This function is for non-standard or ..."},"52":{y:0,u:"../Content/Topics/Workflows/function-reference/Date\u0026Time/datetime_unix.htm",l:-1,t:"UNIX | Okta",i:0.00422450592475897,a:"UNIX Converts a date and time to the UNIX standard format. See  Epoch  to use the number of seconds elapsed instead of milliseconds.  Input Output  Example If start is  2016-09-07T00:01:25.670Z, then output is 1473206485670. If you need the UNIX format for the current date and time, use a  Now  card ..."},"53":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_aes.htm",l:-1,t:"AES | Okta",i:0.00242907226486398,a:"AES The AES function card encrypts input text and returns the encrypted text. The card accepts any aes-based algorithm specified by OpenSSL. Input Output The value of the output field can be sent wherever text can be sent. In order to decipher it, you will need to have the correct algorithm and key."},"54":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_decipher.htm",l:-1,t:"Decrypt | Okta",i:0.00242907226486398,a:"Decrypt Decrypt text from a base64 encoding using a key and specified OpenSSL algorithm. Input Output Example: If algorithm is aes-256-cbc, key is my secret key, and data is hrDDPCtB0Cijc8EFAHhABiYEKdYBgt+e63RGV288SOI= then output is My secret message!. This is the inverse of the example provided ..."},"55":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_cipher.htm",l:-1,t:"Encrypt | Okta",i:0.00242907226486398,a:"Encrypt Encrypt text into a base64 encoding using a key and specified OpenSSL algorithm. Input Output Example: If algorithm is aes-256-cbc, key is my secret key, and data is My secret message! then output is hrDDPCtB0Cijc8EFAHhABiYEKdYBgt+e63RGV288SOI=. The value of the output field can be sent ..."},"56":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_hash.htm",l:-1,t:"Hash | Okta",i:0.00242907226486398,a:"Hash The Hash function card encrypts input text and digests the returns a string as output with hex, binary, or base64 encoding. Input Output Example: If algorithm is sha256, data is My secret message!, and digest is base64, then output is 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=. The value of ..."},"57":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_hmac.htm",l:-1,t:"HMAC | Okta",i:0.00242907226486398,a:"HMAC The HMAC function card encrypts input text and returns the resulting encrypted text, accepting any HMAC algorithm specified by OpenSSL. Input Output Example: If algorithm is sha256, key is my secret key, data is My secret message!, and digest is base64, then output is ..."},"58":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_md5.htm",l:-1,t:"MD5 | Okta",i:0.00242907226486398,a:"MD5 The MD5 function card encrypts input text, returning the resulting encrypted text. Input Output Example: If data is My secret message!, then output is Upi/I0chXQ7ko4FGFoatiQ==. The value of the output field can be sent wherever text can be sent. In order to decipher it, you will need to know the ..."},"59":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_sha1.htm",l:-1,t:"SHA1 | Okta",i:0.00242907226486398,a:"SHA1 The SHA1 function card encrypts input text, returning the resulting encrypted text. Input Output Example: If data is My secret message!, then output is 2jmj7l5rSw0yVb/vlWAYkK/YBwk=. The value of the output field can be sent wherever text can be sent. In order to decipher it, you will need to ..."},"60":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_sha256.htm",l:-1,t:"SHA256 | Okta",i:0.00242907226486398,a:"SHA256 The SHA256 function card encrypts input text, returning the resulting encrypted text. Input Output Example: If data is My secret message!, then output is KhyfFBt0DKFo4WcWbzrP+3FOAKe9Kp+c0BWZ3akwlE8=. The value of the output field can be sent wherever text can be sent. In order to decipher it, ..."},"61":{y:0,u:"../Content/Topics/Workflows/function-reference/Encryption/encryption_sign.htm",l:-1,t:"Sign | Okta",i:0.00242907226486398,a:"Sign Use the Sign function card to input text with an OpenSSL algorithm and private key. The card encrypts text and returns the output with hex, binary, or base64 encoding. Input Output"},"62":{y:0,u:"../Content/Topics/Workflows/function-reference/Error-Handling/errorhandling_trycatch.htm",l:-1,t:"If Error | Okta",i:0.00242907226486398,a:"If Error Specify alternate actions to handle an error without stopping your flow. The function gives you something that looks more like a container than a card, allowing you to specify: Try - one or more Actions and/or Functions you want to run. If Error - the alternate Actions and Functions to ..."},"63":{y:0,u:"../Content/Topics/Workflows/function-reference/Error-Handling/errorhandling_throw.htm",l:-1,t:"Return Error | Okta",i:0.00449380112376971,a:"Return Error Throw an error and end the Flow. Input Fields statusCode: a status code that indicates the type of error thrown message: the content of the error message Output Fields No output fields. Related topics Functions in Connector Builder About the elements of Okta Workflows"},"64":{y:0,u:"../Content/Topics/Workflows/function-reference/Error-Handling/errorhandling_throwif.htm",l:-1,t:"Return Error If | Okta",i:0.00346143669431685,a:"Return Error If Throw an error and halt the Flow if a conditional test is true. If you want to conditionally stop a Flow but under normal circumstances so it doesn\u0027t appear as an error, use Continue If instead. Input Fields value a: the value to be compared comparison: what comparison to make (see ..."},"65":{y:0,u:"../Content/Topics/Workflows/function-reference/File/filefunctions_largedownload.htm",l:-1,t:"Download | Okta",i:0.00242907226486398,a:"Download Download a file to the Workflows file system over HTTP or HTTPS.  You can use this function to download any file that you can access through a URL in your browser (such as an image or a document file). File functions does not support shareable links such as those from Box, OneDrive, or ..."},"66":{y:0,u:"../Content/Topics/Workflows/function-reference/File/filefunctions_info.htm",l:-1,t:"Info | Okta",i:0.00242907226486398,a:"Info Retrieves information about a file.  To use it, set the input to the File Contents of a file you have downloaded previously in the Flow. The output will give you helpful information about it. Input Fields File Content (file): the ID of the file contents Output Fields Filename (text): ..."},"67":{y:0,u:"../Content/Topics/Workflows/function-reference/File/filefunctions_largemultipartupload.htm",l:-1,t:"Multipart Upload | Okta",i:0.00242907226486398,a:"Multipart Upload Uploads a file from the the software\u0027s filesystem to a web service, using http or https, via multipart form-data. Please consider the api you will be be using to fetch the required input field data. The output is dependent on the response from the service.  To access a particular ..."},"68":{y:0,u:"../Content/Topics/Workflows/function-reference/File/filefunctions_largeupload.htm",l:-1,t:"Upload | Okta",i:0.00242907226486398,a:"Upload Upload a file from the Workflows file system to a web service using HTTP or HTTPS. File functions does not support shareable links such as those from Box, OneDrive, or Google Drive. Input Fields File Content (file): the ID of the file contents to upload URL (text): the URL of the request, ..."},"69":{y:0,u:"../Content/Topics/Workflows/function-reference/Flow-Control/flocontrol_let.htm",l:-1,t:"Assign | Okta",i:0.00242907226486398,a:"Assign Create new output fields based on the input supplied. Input This card has no default input fields. To add input fields, create them manually on this card or drag and drop output fields from other cards. Output This card has no default output fields. Output fields are generated based on the ..."},"70":{y:0,u:"../Content/Topics/Workflows/function-reference/Flow-Control/flocontrol_spawn.htm",l:-1,t:"Call Flow | Okta",i:0.00242907226486398,a:"Call Flow Run another flow within the context of your current flow. Your flow will resume when the other flow finishes.  Replace this text, keep paragraph style (class=”noteContent”) If it is not necessary for your current flow to wait for another flow to finish, use the Call Flow Async function ..."},"71":{y:0,u:"../Content/Topics/Workflows/function-reference/Flow-Control/flocontrol_times.htm",l:-1,t:"Repeat | Okta",i:0.00242907226486398,a:"Repeat This function card runs a helper flow a specified number of times. To use this function card, you first need a helper flow that contains the steps you want to run repeatedly. Your helper flow can receive the current loop count by using the Index field in the Context section of the helper flow ..."},"72":{y:0,u:"../Content/Topics/Workflows/function-reference/JSON/json_parse.htm",l:-1,t:"Parse | Okta",i:0.0161920214951913,a:"Parse This function card parses a JSON string into a typed field, such as an object or a list, that you can use in subsequent functions. JSON is a standard format used by web developers to send data to and from RESTful web services. This function is the inverse of  Stringify . If the input string is ..."},"73":{y:0,u:"../Content/Topics/Workflows/function-reference/JSON/json_stringify.htm",l:-1,t:"Stringify | Okta",i:0.0161920214951913,a:"Stringify This function card converts a typed value such as an object or a list into a JSON string. JSON is a standard format used by web developers to send data to and from RESTful web services. This function is the inverse of  Parse . Input Output Related topics Functions in Connector Builder ..."},"74":{y:0,u:"../Content/Topics/Workflows/function-reference/JWT/jwt_decode.htm",l:-1,t:"Decode | Okta",i:0.00242907226486398,a:"Decode Decode a JSON Web Token without first verifying the signature. Input Output Related topics Functions in Connector Builder About the elements of Okta Workflows"},"75":{y:0,u:"../Content/Topics/Workflows/function-reference/JWT/jwt_sign.htm",l:-1,t:"Sign | Okta",i:0.00242907226486398,a:"Sign Encode and sign a JSON Web Token. The signature of a JWT is used to verify the message wasn\u0027t changed while being passed between two services. For tokens signed with a private key, the signature can also be used to verify the sender of the JWT. Input Output Related topics Functions in Connector ..."},"76":{y:0,u:"../Content/Topics/Workflows/function-reference/JWT/jwt_verify.htm",l:-1,t:"Verify | Okta",i:0.00242907226486398,a:"Verify Verify the signature of a JSON Web token and decode the payload using extensible outputs. Input Output Related topics Functions in Connector Builder About the elements of Okta Workflows"},"77":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_errors.htm",l:-1,t:"List - Errors | Okta",i:0.00242907226486398,a:"List - Errors List Errors Many of the list functions call another Flow to process the list (including Filter, Find, For Each, Map, Reduce, Sort, and Unique). If you encounter an error on one of these cards, you may want to look at the Flow History for the Flow that the function calls since the ..."},"78":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_push.htm",l:-1,t:"Add to End | Okta",i:0.00510501359065901,a:"Add to End Add an item to the end of a list (aka Push). This function can operate on lists of any type. To ensure this works correctly, you should make sure that all 3 fields are set to the same type, i.e. if you want to process a list of text, set both list fields to be a list of text and set the ..."},"79":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_unshift.htm",l:-1,t:"Add to Front | Okta",i:0.00242907226486398,a:"Add to Front Add an item to the start of a list (aka Unshift). Input Fields list: The starting list. Be sure to set the type of the list (e.g. list of objects or list of numbers) item: The item to add to the front. (Be sure to set the type - e.g. if the input list is a list of numbers, then item ..."},"80":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_at.htm",l:-1,t:"At | Okta",i:0.00242907226486398,a:"At Returns the item at the specified position in a list, where the first item is in position 0. Input Fields list (list): a list of items index (number): the position of the item you want to select. In a list, the first item is always located at index 0, the second at index 1, the third at index 2, ..."},"81":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_collapse.htm",l:-1,t:"Collapse | Okta",i:0.00242907226486398,a:"Collapse Collapse a list of objects into a single object by merging each object in the order they appear in the list. If objects have overlapping keys subsequent values will take precedence over preceding values. Examples: Input Fields list (required) - the list of objects that you want to collapse ..."},"82":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_concat.htm",l:-1,t:"Combine All | Okta",i:0.00242907226486398,a:"Combine All Combines the contents of two or more lists. The output is a List of every element in the preceding Lists, including potential duplicates. To combine two or more lists into a list that contains unique elements, see  Union (Combine Unique) . Input Fields List 1 (list of text): First list ..."},"83":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_construct.htm",l:-1,t:"Construct | Okta",i:0.00242907226486398,a:"Construct Constructs a new list from a set of values. To use this card, you must create correctly-named inputs and set your types correctly.  First, decide what you want a list of - text, numbers, objects, etc.  Set the type of the list output accordingly.  Then for each item, set the type of each ..."},"84":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_difference.htm",l:-1,t:"Difference | Okta",i:0.00242907226486398,a:"Difference Removes any items in a list (list1) which are also in the second list (list2).  The output is a new list which is a subset of list1, containing only those items which are not in list2.  The lists can be a list of any type of item - a list of text, a list of numbers, a list of objects, ..."},"85":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_filterby.htm",l:-1,t:"Filter | Okta",i:0.00434975919649205,a:"Filter Filter a list to include only those items that meet a specified condition. (To filter based on more complex criteria, use  Filter Custom ) Input Fields list: the list to start with operator: what comparison to make (see table below) path: leave blank when filtering a list of text, numbers, or ..."},"86":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_filter.htm",l:-1,t:"Filter Custom | Okta",i:0.00804709113247052,a:"Filter Custom Given a list, the Filter Custom function creates a new list that contains only those items in the list that pass a test. The test is done by calling a helper flow once for each item. The flow returns true or false, as to whether that item should be included in the output list. To ..."},"87":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_findby.htm",l:-1,t:"Find | Okta",i:0.00338941573067801,a:"Find Find the first item in a list that meets a specified condition. (To find based on more complex criteria, use  Find Custom ) Input Fields list(list of objects): the list to start with operator(drop down menu): what comparison to make (see table below) path(text): leave blank when searching ..."},"88":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_find.htm",l:-1,t:"Find Custom | Okta",i:0.00338941573067801,a:"Find Custom Calling a helper flow allows you to do tests of any complexity (e.g. given a list of email addresses for a particular customer, you could look up to find the first one that already exists in your marketing database). To return all of the items that match a test, use  Filter  or  Filter ..."},"89":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_flatten.htm",l:-1,t:"Flatten | Okta",i:0.00242907226486398,a:"Flatten Takes a list that contains lists and turns it into a single list. Examples: A list of lists is not a type you normally would create, but it may be the case that you get it from a call to another application or API. Input Fields lists (required) - the list of lists that you want to flatten ..."},"90":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_each.htm",l:-1,t:"For Each | Okta",i:0.00621440850619116,a:"For Each Process a list by calling a helper flow for each item. Go back to the For Each card,  input the list you want to use, and then select the flow you just built. The inputs will auto-populate, then you can map data into them. To map an input to accept each item of the list, click in that field ..."},"91":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_asynceach.htm",l:-1,t:"For Each - Ignore Errors | Okta",i:0.00242907226486398,a:"For Each - Ignore Errors Process a list by calling a helper flow for each item. This function is almost identical to the  For Each  function, with one important difference: For Each will stop processing more items if an error occurs when processing one of the items in the helper flow. On the other ..."},"92":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_shift.htm",l:-1,t:"Get First Item | Okta",i:0.00242907226486398,a:"Get First Item Given a list, return two outputs: the first item and the list with that item removed (aka Shift). Input Fields list: The starting list. Be sure to set the type of the list (e.g. list of objects or list of numbers) Output Fields list: Returns the list without the first item. (Be sure ..."},"93":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_pop.htm",l:-1,t:"Get Last Item | Okta",i:0.00242907226486398,a:"Get Last Item Given a list, return two outputs: the last item and the list with that item removed (aka Pop). Input Fields list: A list of items. Can be set to any type, and then the output item and list should be set to match that type. Output Fields list: A new list which is the same as the input ..."},"94":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_groupby.htm",l:-1,t:"Group By | Okta",i:0.00242907226486398,a:"Group By This function takes a list and outputs an object that\u0027s grouped by the values in the original list at the specified path. Returns an object that groups a list of items (for example, objects, strings, numbers) by the specified path\u0027s values. Each unique value for the specified path in the ..."},"95":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_includes.htm",l:-1,t:"Includes | Okta",i:0.00242907226486398,a:"Includes Check whether a list contains a particular item. The output is a True/False value - it returns true if the list contains the item, false if it does not. The list can be a list of any type of item - a list of text, a list of numbers a list of objects, etc. The value must be an item of that ..."},"96":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_indexby.htm",l:-1,t:"Index By | Okta",i:0.0161920214951913,a:"Index By This function is designed for a common API pattern, where a service returns a list of field values as a list of objects which each contain a field name as one key, and a field value as another key. In that case, this function can be useful in converting that list into an object that ..."},"97":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_intersection.htm",l:-1,t:"Intersection | Okta",i:0.00242907226486398,a:"Intersection Given two or more input lists, creates a new list that contains only those items that are included in all of the input lists. The lists can be of any type (text, number, object, etc.), as long as all lists are set to the same item type. Input Fields list1:  The first list of items. ..."},"98":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_length.htm",l:-1,t:"Length | Okta",i:0.00242907226486398,a:"Length Find the number of items in a list. Input Fields list: Enter the list that you want to find the length of. Output Fields length(number): Returns the number of items in the list. Related topics About lists Functions in Connector Builder About the elements of Okta Workflows"},"99":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_join.htm",l:-1,t:"List to Text | Okta",i:0.00242907226486398,a:"List to Text This function generates a single text output from a list, using an optional separator. For instance if you have a list of product names, you can use this function to create comma-separated list of products to include in an email. The function works with lists of text, numbers, ..."},"100":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_map.htm",l:-1,t:"Map | Okta",i:0.00414967964728542,a:"Map You can use the Map function to convert a list to a new list by running a helper flow for each item in the list. For example, if you have a helper flow that converts numbers to text (1 to \"1\"), you can run that helper flow on a whole list at once using the Map function to go from [1,2,3,4,5] to ..."},"101":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_merge.htm",l:-1,t:"Merge | Okta",i:0.00242907226486398,a:"Merge Merge objects from two or more lists at matching offsets. If an item with the same key exists in multiple lists for the same offset, the value from the later list will overwrite the value from an earlier list. Input Fields list1(list of objects) - required: a list of objects to be merged ..."},"102":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_pluck.htm",l:-1,t:"Pluck | Okta",i:0.00552616555322258,a:"Pluck This function takes a list of objects, and produces a sub-list.  It does that by plucking the key specified by key from each object in the input list, and putting those values into an output list.  The list input must be a list of objects, this function doesn\u0027t make sense for any other kind of ..."},"103":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_reduce.htm",l:-1,t:"Reduce | Okta",i:0.00242907226486398,a:"Reduce You can also include other inputs that your flow may need.  After defining your inputs, build the rest of the helper flow, ending with a Return card (found in the Control category) that returns the new accumulated value - to be passed along with the next item in the list to the next call of ..."},"104":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_uniqueby.htm",l:-1,t:"Remove Duplicates | Okta",i:0.00242907226486398,a:"Remove Duplicates Removes duplicates from a list. Input Fields List: The list you want to remove duplicates from. Path (Objects only)List is a list of objects, Path is the name of the key that determines whether something is a duplicate or not. For example, you may want just one customer record per ..."},"105":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_reverse.htm",l:-1,t:"Reverse | Okta",i:0.00242907226486398,a:"Reverse Reverse the order of the items in a list. Input Fields list(list): the list you want to reverse Output Fields reversed list(list): the list in reverse order Make sure that list and reversed list are both set to the same type. Example: If list is [1,2,3,4,5] then reversed list is [5,4,3,2,1] ..."},"106":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_sample.htm",l:-1,t:"Sample | Okta",i:0.00242907226486398,a:"Sample Generates a random sample from a list. Input Fields list (list): a list you want to take a sample from -- be sure to set the type of the list amount (number): the number of samples you wish to return. Output Fields samples: returns a random selection of the size specified from the list ..."},"107":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_slice.htm",l:-1,t:"Slice | Okta",i:0.00242907226486398,a:"Slice Choose a subset of a list using start and end points. Input Fields list - the list you are starting with start - the first item to include in the new list (where 0 is the first item) end - the position to end (the item in this position won\u0027t be included in the new list); if you leave this ..."},"108":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_sortby.htm",l:-1,t:"Sort | Okta",i:0.00449380112376971,a:"Sort Sort a list from smallest to largest. Input Fields list - The list you want to sort. path - If list is a list of objects, path is the name of the key to sort the objects by or a path if the object contains other objects (e.g. \"customer.lastname\"); otherwise, you can leave path blank. Output ..."},"109":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_sort.htm",l:-1,t:"Sort Custom | Okta",i:0.00242907226486398,a:"Sort Custom Sort Custom allows you to do a custom sort of a list by calling another flow to generate the value used to sort each item. For simple sorts, use the  Sort  function instead. To use this function, you\u0027ll need another flow that calculates the sort value for an item. This helper flow will ..."},"110":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_split.htm",l:-1,t:"Split | Okta",i:0.00242907226486398,a:"Split Split a list at a specific index value. Input Fields List (list of objects): The first of a list of values that will be split at a specified index value Click on an empty cell in each list to add a list item. A cell can contain only one list item.  Split after position (number): The index ..."},"111":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_stats.htm",l:-1,t:"Statistics | Okta",i:0.00242907226486398,a:"Statistics Read statistics for a list of numbers. Input Fields List (list of objects): list of numbers Click on an empty cell in each list to add a list item. A cell can contain only one list item. Statistics will only be computed for list items that are numbers. Output Fields Sum: Sum of all the ..."},"112":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_sum.htm",l:-1,t:"Sum | Okta",i:0.00242907226486398,a:"Sum Calculates the sum of a list of numbers. This function accepts only a list of type number. If your numbers are formatted as a list of text, you can use the  Map  function to convert each item from text to a number. If your numbers are stored inside a list of objects, you can use the  Pluck  ..."},"113":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_swap.htm",l:-1,t:"Swap | Okta",i:0.00242907226486398,a:"Swap Swap two elements in a list. Input Fields list  (list of objects): List of items in which two will swap positions Click on an empty cell in each list to add a list item. A cell can contain only one list item. first position (number): First of the two list items that will exchange positions; ..."},"114":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_truncate.htm",l:-1,t:"Truncate | Okta",i:0.00242907226486398,a:"Truncate Cut a list down to a specified length. This function can operate on lists of any type. To ensure this works correctly, you should make sure that the input and output lists are set to the same type. Input Fields list: the input list size: the size you want to cut the list down to Output ..."},"115":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_union.htm",l:-1,t:"Union (Combine Unique) | Okta",i:0.00449380112376971,a:"Union (Combine Unique) Combine multiple lists into a single list of all of the unique values contained in any of the input lists. The lists can be of any type (text, number, object, and so forth) as long as all lists are set to the same type, including the output list. Input Fields List 1 :  The ..."},"116":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_unique.htm",l:-1,t:"Unique Custom | Okta",i:0.00449380112376971,a:"Unique Custom Allows you to use custom logic to determine how to remove duplicates from a list. To use this function, you’ll need a helper flow that calculates the value that will determine if an item is unique or not. (For example, you may have a list of available volunteers but you only want one ..."},"117":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_xor.htm",l:-1,t:"XOR | Okta",i:0.00242907226486398,a:"XOR XOR, or \"exclusive or\", takes two input lists and generates a new list that contains all of the items that are in one or the other input list but not both. The lists can be of any type (text, number, object, etc.) as long as both input lists and the output list are set to the same type. Input ..."},"118":{y:0,u:"../Content/Topics/Workflows/function-reference/List/list_zip.htm",l:-1,t:"Zip | Okta",i:0.00242907226486398,a:"Zip Takes two lists of equal length and combines them into a list of lists of each corresponding pair. For instance, if you zipped together [1,2,3] and [\"a\",\"b\",\"c\"] you\u0027d get a new list: [[1,\"a\"],[2,\"b\"],[3,\"c\"]]. The input lists can be lists of any type. Input Fields list1: The first list list2: ..."},"119":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_abs.htm",l:-1,t:"Absolute Value | Okta",i:0.00242907226486398,a:"Absolute Value Calculates the absolute value of a number, which is the size of the number irrespective of negative or positive. For instance, the absolute values of -5 and 5 are both 5. Input Fields number(number): the number you want the absolute value of Output Fields output(number): the absolute ..."},"120":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_add.htm",l:-1,t:"Add | Okta",i:0.00242907226486398,a:"Add Returns the sum of the input values. Input Fields This card accepts any number of input values when calculating the sum. As a default, it accepts two input values but more can be added. number 1: the first value number 2: the second value Output Fields total: the sum of the values provided ..."},"121":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_divide.htm",l:-1,t:"Divide | Okta",i:0.00242907226486398,a:"Divide Returns the quotient from the division operation between two values. Input Fields number: the number you want to divide (the dividend) divide by: the number you want to divide it by (the divisor) Output Fields output: the result of the division (the quotient) Related topics Functions in ..."},"122":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_exp.htm",l:-1,t:"Exponent | Okta",i:0.00242907226486398,a:"Exponent Calculates  Euler\u0027s number , e (~ 2.718), raised to a specified power, or exponent. To calculate a different base number to a specified exponent, use  Power   instead. Input Fields number: The number e will be raised to. Output Fields output: The calculated value of e to the specified ..."},"123":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_factorial.htm",l:-1,t:"Factorial | Okta",i:0.00242907226486398,a:"Factorial Calculates the factorial of a number, returning 0 if that number is less than 0. A factorial is the product of an integer and all the integers below it. For instance, the factorial of 5 is 5 x 4 x 3 x 2 x 1 which is 120. Input Fields number (Number): the initial value Output Fields output ..."},"124":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_expression.htm",l:-1,t:"Formula | Okta",i:0.00242907226486398,a:"Formula Build a math expression by combining operators, functions and numbers you type with fields you drag and drop in. Place number fields anywhere in the expression where there can be a number. At runtime, the expression is evaluated using the values of the fields to generate a ..."},"125":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_increment.htm",l:-1,t:"Increment | Okta",i:0.00242907226486398,a:"Increment Increases a numerical value by one. Input Output Example: If a is 16, then the output is 17. If a is 21.2, then the output is 22.2."},"126":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_larger.htm",l:-1,t:"Larger | Okta",i:0.00242907226486398,a:"Larger Returns a boolean value indicating whether a value is larger than another. Input Output Example If a is 215 and b is 64, then output  is True. If a is 5.2 and b is 21.7, then output  is False."},"127":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_log.htm",l:-1,t:"Log | Okta",i:0.00242907226486398,a:"Log Calculate a logorithm, which is the power to which a base number must be raised to produce a given number. Input Fields input: The number to calculate the logorithm for base: The base to use, often 10 Output Fields output: The power to which the base number must be raised Examples If input is ..."},"128":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_multiply.htm",l:-1,t:"Multiply | Okta",i:0.00242907226486398,a:"Multiply Returns the product of provided values. Input Fields This card accepts any number of input values when calculating the product. As a default, it accepts two input values. number 1: the first value number 2: the second value Output Fields output: the product of the values provided Related ..."},"129":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_power.htm",l:-1,t:"Power | Okta",i:0.00449380112376971,a:"Power Calculate a base number raised to a specified power, or exponent. Input Fields base: The base number exponent: The power to raise the base number to Output Fields output: The final product Examples 10 to the power of 3 is 1000 because 10 x 10 x 10 = 1000 2 to the power of 3 is 8 because 2 x 2 ..."},"130":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_random.htm",l:-1,t:"Random Integer | Okta",i:0.00242907226486398,a:"Random Integer Calculates a random integer between two numbers. Input Fields Greater than or equal to: the randomly generated integer will be greater than or equal to this value Less than: the randomly generated integer will be less than this value Output Fields random: a randomly generated ..."},"131":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_mod.htm",l:-1,t:"Remainder | Okta",i:0.00242907226486398,a:"Remainder Finds the remainder after the division of two integers. Input Fields number (Number): the dividend value (value being divided) divide by (Number): the divisor value (the value to divide by) Output Fields remainder (Number): the remainder after doing the division Examples If number is 13 ..."},"132":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_round.htm",l:-1,t:"Round | Okta",i:0.00242907226486398,a:"Round Rounds a number to the nearest integer. For different options, also see: Round Up, Round Down, and Round Decimal Places. Input Fields number: The number you wish to round. Output Fields rounded: The rounded value. Examples If number is 10.4 then rounded is 10 If number is 10.5 then rounded is ..."},"133":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_tofixed.htm",l:-1,t:"Round Decimal Places | Okta",i:0.00242907226486398,a:"Round Decimal Places Rounds a number to a specified number of decimal places. Other rounding options are: Round (closest integer), Round Up, and Round Down. Input Fields number: the number to be rounded decimal places: the number of decimal places to round to Output Fields rounded: the rounded ..."},"134":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_floor.htm",l:-1,t:"Round Down | Okta",i:0.00242907226486398,a:"Round Down Round down to the nearest integer (aka Floor). Alternatively, you can choose Round (closest integer), Round Up, or Round Decimal Places. Examples: 0.95 -\u003e 0 1.25 -\u003e 1 3.0001 -\u003e 3 Input Fields number: the number to be rounded down Output Fields rounded down: the number rounded down Related ..."},"135":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_ceil.htm",l:-1,t:"Round Up | Okta",i:0.00242907226486398,a:"Round Up Round up to the nearest integer (aka Ceiling). Alternatively, you can choose Round (closest integer), Round Down, or Round Decimal Places. Examples: 0.95 -\u003e 1 1.25 -\u003e 2 3.0001 -\u003e 4 Input Fields number: the number to be rounded up Output Fields rounded up: the number rounded up Related ..."},"136":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_sign.htm",l:-1,t:"Sign | Okta",i:0.00242907226486398,a:"Sign Calculates the sign of a number. Input Fields number: The number to test the sign of Output Fields Output is either: -1 if the input is a negative number 0 if the input is zero 1 if the input is a positive number Related topics Functions in Connector Builder About the elements of Okta Workflows"},"137":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_smaller.htm",l:-1,t:"Smaller | Okta",i:0.00242907226486398,a:"Smaller Returns a boolean value indicating whether a value is smaller than another. Input Output Example If a is 215 and b is 64, then output is False. If a is 5.2 and b is 21.7, then output is True."},"138":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_sqrt.htm",l:-1,t:"Square Root | Okta",i:0.00242907226486398,a:"Square Root Calculates the square root of a number, e.g. the square root of 16 is 4. Input Fields number - The number to find the square root of. Output Fields square root - The square root of number Related topics Functions in Connector Builder About the elements of Okta Workflows"},"139":{y:0,u:"../Content/Topics/Workflows/function-reference/Number/number_subtract.htm",l:-1,t:"Subtract | Okta",i:0.00242907226486398,a:"Subtract Returns the difference between two values. Input Fields number: the start value subtract: the value to subtract Output Fields difference: the first input minus the second input Related topics Functions in Connector Builder About the elements of Okta Workflows"},"140":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_clearempty.htm",l:-1,t:"Clear Empty | Okta",i:0.00449380112376971,a:"Clear Empty The Clear Empty function card removes keys with no values associated (for example, null, \"\", {}) from an object. Similar to the Object - Filter function but with the added ability of choosing whether or not the filtering is recursive. Input Fields object:  the object you want to operate ..."},"141":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_collapse.htm",l:-1,t:"Collapse | Okta",i:0.00242907226486398,a:"Collapse Combine a list of objects with key and value properties into a single JSON object. This is the inverse of the Split function card. Input Fields list (List of Objects): list of objects to be combined Click the empty input field to add a second or subsequent JSON list of objects that you also ..."},"142":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_construct.htm",l:-1,t:"Construct | Okta",i:0.00311252904193376,a:"Construct Creates a new object based on a set of user-defined inputs. Input Fields (user created fields): Create one input for each key you want to create in the output object. The input names become the key names in the object that gets created. Each input can be set to any type, including object ..."},"143":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_filter.htm",l:-1,t:"Filter | Okta",i:0.00242907226486398,a:"Filter The Filter card will remove keys with no values associated (for example, null, \"\", {}) from an object. If the object may contain other objects, use the Clear Empty card instead. Input Fields object:  the object you want to operate on Output Fields output: your input object without empty keys ..."},"144":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_each.htm",l:-1,t:"For Each | Okta",i:0.00242907226486398,a:"For Each Iterates through an object key-by-key using a helper flow. For each key in the input object, the helper flow is called with the key name and value for that key - you can select those using the drop down in the designer after selecting a helper flow from the Choose Flow dialog. The helper ..."},"145":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_get.htm",l:-1,t:"Get | Okta",i:0.0489382486508838,a:"Get Reads the value stored in an object at a given path.  For example, if the object is:  { \"a\":\"one\", \"b\":\"two\", \"c\": 17 } then specifying a path of b will retrieve the text two.  To get more than one value at a time from an object, use  Get Multiple  instead. You can retrieve values from nested ..."},"146":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_pick.htm",l:-1,t:"Get Multiple | Okta",i:0.0528288695261096,a:"Get Multiple Picks several values from an object at once. Similar to  Get , the Get Multiple card allows you to access values within an object by providing multiple keys and/or paths to values in an object.  Input Fields object (required): the object or list of objects you want to pick values from ..."},"147":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_keys.htm",l:-1,t:"Keys | Okta",i:0.00242907226486398,a:"Keys The Keys card will generate a list of the keys within your object. Input Fields object:  the object you want to extract keys from Output Fields output: the keys of your object organized as a list of text Examples If input object is{\"Name\":\"Emily\", \"Age\":\"66\", \"Hair Color\":\"Brown\", \"Eye ..."},"148":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_process.htm",l:-1,t:"Map | Okta",i:0.00346143669431685,a:"Map Processes an object key-by-key using a helper flow, creating a new object as output.  For each key in the input object, the helper flow is called with the key name and value for that key - you can select those using the dropdown in the designer after selecting a helper flow from the Choose Flow ..."},"149":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_map.htm",l:-1,t:"Map to List | Okta",i:0.00346143669431685,a:"Map to List Iterates through an object key-by-key using a helper flow, creating a list as output, with one item in the list per key in the object. For each key in the input object, the helper flow is called with the key name and value for that key - you can select those using the dropdown in the ..."},"150":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_merge.htm",l:-1,t:"Merge | Okta",i:0.00242907226486398,a:"Merge Merges multiple objects into a single object. The output object has all of the keys (with their associated values) that appear in any of the input objects. If the same key appears in more than one of the input objects, only one value is taken. There are two inputs by default, but more can be ..."},"151":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_move.htm",l:-1,t:"Move | Okta",i:0.00242907226486398,a:"Move Moves a value from one key to another key, which essentially renames the key while keeping the value the same. Input Fields object:  the object to manipulate source:  the key in the original object containing the value you wish to rename destination:  the new key to move the value to Output ..."},"152":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_set.htm",l:-1,t:"Set | Okta",i:0.00311252904193376,a:"Set Sets a key of an object to a specified value, creating a new key if it doesn\u0027t exist already. Input Fields object:  the object you are starting with path:  can be a single top-level key name (e.g. \"customer\"), a dot-delimited path (e.g. \"customer.id\" where \"id\" is a key inside a sub-object or ..."},"153":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_size.htm",l:-1,t:"Size | Okta",i:0.00242907226486398,a:"Size Returns the number of elements in an object. Input Fields object (object): the object to get the size of Output Fields size (number): the number of elements in the object; for example the following object would return the value 2 { \"element1\":\"a\", \"element2\":\"b\" } Related topics Functions in ..."},"154":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_split.htm",l:-1,t:"Split | Okta",i:0.00242907226486398,a:"Split Split an object into a list of objects, each with key and value properties. This is the inverse of the Collapse function card. Input Fields object  (List of Objects): JSON object of key/value pairs that will be split into a list of objects Click the empty input field to add a second or ..."},"155":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_unset.htm",l:-1,t:"Unset | Okta",i:0.00242907226486398,a:"Unset Deletes a key/value pair from an object. Input Fields object:  the object to delete the key/value pair from path:  the key to delete; either a top level key name, a dot-delimited path to a subkey, or a list of key names. (see examples below) Output Fields output:  the new object Examples For ..."},"156":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_unzip.htm",l:-1,t:"Unzip | Okta",i:0.00422450592475897,a:"Unzip Create two lists, one for keys and the other for values, from an object. This is the function card of  Zip . For example, for the object  { \"first.name\":\"John\", \"last.name\":\"Doe\" } two lists are derived as outputs: keys: [ \"first.name\", \"last.name\" ] values: [ \"John\", \"Doe\" ] Input Fields ..."},"157":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_values.htm",l:-1,t:"Values | Okta",i:0.00242907226486398,a:"Values The Values card will generate a list of the values within your object, Input Fields object:  the object you want to extract values from Output Fields output: the values of your object organized as a list, the list type can be selected based on the values within your object Examples If input ..."},"158":{y:0,u:"../Content/Topics/Workflows/function-reference/Object/object_zip.htm",l:-1,t:"Zip | Okta",i:0.0327151579921815,a:"Zip Create an object from two lists, by mapping keys from the first lists to values from the second. This is particularly useful when creating an object that has keys with dots in the key names.   Because dots usually refer to sub-objects, it can be difficult to create objects that have key names ..."},"159":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_cleartable.htm",l:-1,t:"Clear Table | Okta",i:0.00242907226486398,a:"Clear Table Delete all rows in a table. Options Input Output See Also About tables Create and edit a table Functions in Connector Builder About the elements of Okta Workflows"},"160":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_createrow.htm",l:-1,t:"Create Row | Okta",i:0.00346143669431685,a:"Create Row Create a new row in a table. Options Input Output See Also Provide table ID at runtime Functions in Connector Builder About the elements of Okta Workflows"},"161":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_createtable.htm",l:-1,t:"Create Table | Okta",i:0.00944434036681914,a:"Create Table Create a new table, returning the table ID for that table so that you can add rows to it in subsequent cards, import rows from a CSV or another table.  The new table will be created in the My Folder personal folder for the user who is the owner of the flow. The table may appear in ..."},"162":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_deleterow.htm",l:-1,t:"Delete Row | Okta",i:0.00242907226486398,a:"Delete Row Delete a row in a table. Options Input Output There are no output fields for this card. Related topics Functions in Connector Builder About the elements of Okta Workflows"},"163":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_exporttocsv.htm",l:-1,t:"Export To CSV | Okta",i:0.00242907226486398,a:"Export To CSV Export a table to a CSV file, including all rows or a filtered subset of rows. The CSV file will be created within the file system.  Options Input Output See Also About tables Provide a table ID at runtime Functions in Connector Builder About the elements of Okta Workflows"},"164":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_importfromcsv.htm",l:-1,t:"Import From CSV | Okta",i:0.00242907226486398,a:"Import From CSV Import the contents of a CSV file into a Table. Once the file contents are imported, you can process the data in a variety of ways, including using the  Search Rows  function to retrieve a single row, a subset of rows, or all the rows, and process the rows one by one using a List ..."},"165":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_readrow.htm",l:-1,t:"Read Row | Okta",i:0.00242907226486398,a:"Read Row Read values from a row in a table. Options Input Output Related topics Functions in Connector Builder About the elements of Okta Workflows"},"166":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_readtable.htm",l:-1,t:"Read Table | Okta",i:0.00510501359065901,a:"Read Table Return the column schema of a table by its ID. Options Input There are no input fields for this card. Output Related topics Functions in Connector Builder About the elements of Okta Workflows"},"167":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_searchrows2.htm",l:-1,t:"Search Rows | Okta",i:0.00862325884158119,a:"Search Rows Find rows in a table that match a set of conditions. Options Input Output If you\u0027re returning a single result, the following outputs are returned: If you\u0027re returning multiple results, a list of rows is returned, where each row includes all of the above, or an empty list if zero matching ..."},"168":{y:0,u:"../Content/Topics/Workflows/function-reference/Tables/stash_updaterow.htm",l:-1,t:"Update Row | Okta",i:0.00242907226486398,a:"Update Row Update a row in a table. Options Input Output There are no output fields for this card. Related topics Functions in Connector Builder About the elements of Okta Workflows"},"169":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_at.htm",l:-1,t:"At | Okta",i:0.00242907226486398,a:"At Return the single character at a specified position in a text input, where 0 is the first position. To get a whole segment rather than a single character, use the Text Segment function. To search for a single character, use Find. Input Fields text: The input text. position: The location of the ..."},"170":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_base64.htm",l:-1,t:"Base64 | Okta",i:0.00242907226486398,a:"Base64 Returns the base64 encoding of a string. Input Fields text: the word/text that will be converted into base64.  The input value must be a valid UTF-8 encoded string. Output Fields output: returns the base64 encoding of the input text.  For example, input \"Hello\", would return \"SGVsbG8=\". See  ..."},"171":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_base64decode.htm",l:-1,t:"Base64 Decode | Okta",i:0.00242907226486398,a:"Base64 Decode Returns base64 decoded text.  Input Fields text: base64 encoded text. Output Fields output: returns the decoded version of the text. For example, the input \"SGVsbG8=\" would decode to \"Hello\". Related topics Functions in Connector Builder About the elements of Okta Workflows"},"172":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_compose.htm",l:-1,t:"Compose | Okta",i:0.00574427070709299,a:"Compose Combine text you type and fields you drag and drop in. At runtime, all of the text is combined with the values of the fields to generate a single text output. For instance, you might compose an email by starting with the following text: Dear , This is a reminder to please pay the following ..."},"173":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_concat.htm",l:-1,t:"Concatenate | Okta",i:0.00390019621771133,a:"Concatenate Takes the inputs and combines them, without spaces, into a single text output. You can also do this using  Compose . Input Fields text1: the starting text text2: the text that will follow The more text you want to combine, the more input fields you can add one at a time. Output Fields ..."},"174":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_find.htm",l:-1,t:"Find | Okta",i:0.00806382663870976,a:"Find Finds the first instance of a string within another string. To do a more complex search, such as looking for a string that matches a pattern, use the Find Pattern  function instead. Input Fields look in is the text you want to search inside. look for is the text you want to search for. Output ..."},"175":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_email.htm",l:-1,t:"Find Email | Okta",i:0.00242907226486398,a:"Find Email Find and return the first instance of a valid email address in text.  For example, if the input is \"You can reach me at fred@example.com or support@example.com\", the output will be \"fred@example.com\". Input Fields text: the text to search for an email Output Fields email: the first email ..."},"176":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_lastindexof.htm",l:-1,t:"Find Last | Okta",i:0.00242907226486398,a:"Find Last Search for the last match inside text. Returns the position number or -1 if not found. Input Fields look in (text): the text to search inside look for (text): the text that will be searched for right-most position (number): optional - the right-most position to search, where 0 is the first ..."},"177":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_match.htm",l:-1,t:"Find Pattern | Okta",i:0.013258045304811,a:"Find Pattern Search text for the first match of a pattern. Input Fields look in is the text you want to search inside. look for is the text you want to search for and/or pattern to match. Patterns must follow a standard pattern format called a regular expression (see details below). Output Fields ..."},"178":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_length.htm",l:-1,t:"Length | Okta",i:0.00242907226486398,a:"Length Returns the length of text, in number of characters. Input Fields text Output Fields Returns the number of the letters or characters in the text. Examples The length of \"test\" is 4 The length of \"test-1\" is 6 The length of \"test 1\" is also 6 (a blank also counts as a character) Related topics ..."},"179":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_random.htm",l:-1,t:"Random | Okta",i:0.00242907226486398,a:"Random Returns random text of a specified length. Input Fields length (number): the length of the desired text. Output Fields output: randomly generated text, of the specified length, composed of both numbers and letters of varying case. e.g.: input length \"5\" could return \"ynt6N\". Related topics ..."},"180":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_replace.htm",l:-1,t:"Replace | Okta",i:0.00346143669431685,a:"Replace Search and replace text. Input Fields look in is the full text to start with. look for is the text to search for, or can be a pattern to match using a format called regular expressions. (For more details on search patterns, see  Find Pattern . replace with is the text you want to replace it ..."},"181":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_replaceany.htm",l:-1,t:"Replace Patterns | Okta",i:0.00242907226486398,a:"Replace Patterns Find and replace any of multiple patterns with a single value. For any find and replace that looks for a single text or pattern, use   Replace  instead. Input Fields look in is the full text to start with. replace with is the text to replace any instances found, or leave it empty if ..."},"182":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_split.htm",l:-1,t:"Split | Okta",i:0.00242907226486398,a:"Split Split text into a list of text segments separated by commas or other specified delimiter.  Input Fields text: The text that will be split up (e.g. one,two,three). separator: The sequence of one or more characters in the input text that indicator where to break it up. The separator can be a ..."},"183":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_substr.htm",l:-1,t:"Text Segment | Okta",i:0.00806382663870976,a:"Text Segment Return a portion of text (formerly called \"Substring\"). Input Fields text: The text containing the segement you want to extract. start at: The position of the first character you want to extract in \u0027text\u0027 where 0 is the first character, 1 is the second, and so on. end before: The ..."},"184":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_tolowercase.htm",l:-1,t:"To Lower Case | Okta",i:0.00242907226486398,a:"To Lower Case Converts all letters in text to lowercase. Input Fields text: The start text. Output Fields output: The text with all letters in lowercase. Example: JohnDoe@CompanyName.Com --\u003e johndoe@companyname.com Related topics Functions in Connector Builder About the elements of Okta Workflows"},"185":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_touppercase.htm",l:-1,t:"To Upper Case | Okta",i:0.00242907226486398,a:"To Upper Case Converts all letters in text to UPPERCASE. Input Fields text: The start text. Output Fields output: The text with all letters in uppercase. Examples: aBcdeFg --\u003e ABCDEFG This is a test. --\u003e THIS IS A TEST. Related topics Functions in Connector Builder About the elements of Okta ..."},"186":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_trim.htm",l:-1,t:"Trim | Okta",i:0.00449380112376971,a:"Trim Remove leading and trailing blank space from text. Input Fields text: The text you want to remove white space from the start and end, such as         Hello, World  . Output Fields output: The text with the space removed. For the above example, would be Hello, World. Related topics Functions in ..."},"187":{y:0,u:"../Content/Topics/Workflows/function-reference/Text/text_uuid.htm",l:-1,t:"Unique ID | Okta",i:0.00242907226486398,a:"Unique ID Returns a random  universally unique identifier (UUID) , sometimes called a globally unique identified (GUID). It is represented as 32 hexadecimal (base 16) digits displayed in five groups separated by hyphens. For example: e83bbc57-1991-417f-8203-3affb47636cf. Use this when you need to ..."},"188":{y:0,u:"../Content/Topics/Workflows/function-reference/True-False/truefalse_nor.htm",l:-1,t:"All False? | Okta",i:0.00242907226486398,a:"All False? Return true if all inputs are false; otherwise false. (Also known as the Boolean operator NOR.) Input Fields input 1: the first true/false value input 2: the second true/false value \u0027click or drop here to create\u0027: additional input fields that can be added Output Fields all false?: a true ..."},"189":{y:0,u:"../Content/Topics/Workflows/function-reference/True-False/truefalse_and.htm",l:-1,t:"And | Okta",i:0.00242907226486398,a:"And Returns true if all inputs are true, otherwise returns false. Input Fields input 1: the first true/false value input 2: the second true/false value \u0027click or drop here to create\u0027: additional input fields can be added if you want to check more than 2 values Output Fields all true?: a true or ..."},"190":{y:0,u:"../Content/Topics/Workflows/function-reference/True-False/truefalse_nand.htm",l:-1,t:"Any False? | Okta",i:0.00242907226486398,a:"Any False? Return true if any of the inputs are false; otherwise return false (also known as NAND). input 1: the first true/false value input 2: the second true/false value \u0027click or drop here to create\u0027: additional true/false input fields that can be added to check additional values Output Fields ..."},"191":{y:0,u:"../Content/Topics/Workflows/function-reference/True-False/truefalse_compare.htm",l:-1,t:"Compare | Okta",i:0.00242907226486398,a:"Compare Run a simple true or false test. For instance, you might check to see if a Type field is equal to \"Customer\" or if a Price field is greater than 1000. Input Fields value a: the value to be compared comparison: what comparison to make (see table below) value b: the value to compare against ..."},"192":{y:0,u:"../Content/Topics/Workflows/function-reference/True-False/truefalse_not.htm",l:-1,t:"Not | Okta",i:0.00242907226486398,a:"Not Takes a true or false input and returns the opposite value. Input Fields input field: a true/false value Output Fields result: the opposite value of the input true if the input has a value of false false if the input has a value of true Related topics Functions in Connector Builder About the ..."},"193":{y:0,u:"../Content/Topics/Workflows/function-reference/True-False/truefalse_or.htm",l:-1,t:"Or | Okta",i:0.00242907226486398,a:"Or Return true if any inputs are true, otherwise false. Input Fields input 1: the first true/false value input 2: the second true/false value \u0027click or drop here to create\u0027: additional input fields that can be added Output Fields any true?: a true or false value true: if any input is true false: if ..."},"194":{y:0,u:"../Content/Topics/Workflows/function-reference/True-False/truefalse_xor.htm",l:-1,t:"Or (Exclusive) | Okta",i:0.00242907226486398,a:"Or (Exclusive) The Exclusive Or true/false operator (also known as XOR) returns true if one, and only one, input is true; otherwise returns false. Input Fields input 1: the first true/false value input 2: the second true/false value Output Fields only one true?: a true/false value true: if one input ..."},"195":{y:0,u:"../Content/Topics/Workflows/function-reference/True-False/truefalse_xnor.htm",l:-1,t:"XNOR | Okta",i:0.00242907226486398,a:"XNOR A True/False operator that returns true if both inputs are true or both inputs are false; otherwise returns false. It is the opposite of the Exclusive Or (or XOR) operation. Input Fields input 1: the first true/false value input 2: the second true/false value Output Fields output: a true/false ..."},"196":{y:0,u:"../Content/Topics/Workflows/function-reference/URL/url_decodecomponent.htm",l:-1,t:"Decode Component | Okta",i:0.00242907226486398,a:"Decode Component Decode a URL-encoded component such as the value of a query parameter. This function card decodes all URL-encoded characters and outputs the decoded text. For example, the input Sherlock%20Holmes%3A%20Detective decodes to Sherlock Holmes: Detective. This function is the inverse of  ..."},"197":{y:0,u:"../Content/Topics/Workflows/function-reference/URL/url_decode.htm",l:-1,t:"Decode Query | Okta",i:0.00561601742423398,a:"Decode Query Decode a URL-encoded query string into a query object. A query string is the remainder of a string after the ? question mark in a URL. Certain special characters, such as space, :, ?, or / need to be encoded because they have special meaning in the URL itself. This function card is the ..."},"198":{y:0,u:"../Content/Topics/Workflows/function-reference/URL/url_encodecomponent.htm",l:-1,t:"Encode Component | Okta",i:0.00346143669431685,a:"Encode Component Encode text into a URL-encoded text for use within a URL. This function encodes all reserved characters such as space, :, ?, or / for use in a URL. This function is the inverse of  Decode Query .  If you want to build a URL where the value of name is returned from a previous step, ..."},"199":{y:0,u:"../Content/Topics/Workflows/function-reference/URL/url_encode.htm",l:-1,t:"Encode Query | Okta",i:0.00402029330263456,a:"Encode Query Encode a query object into a URL-encoded query object.  A query string is everything after the ? question mark in a URL. Certain special characters, such as space, :, ?, or / need to be encoded because they have special meaning in the URL itself. This function card is the inverse of  ..."},"200":{y:0,u:"../Content/Topics/Workflows/function-reference/URL/url_format.htm",l:-1,t:"Format | Okta",i:0.00242907226486398,a:"Format Construct a URL string from its components. Input Output Related topics Functions in Connector Builder About the elements of Okta Workflows"},"201":{y:0,u:"../Content/Topics/Workflows/function-reference/URL/url_parse.htm",l:-1,t:"Parse | Okta",i:0.00242907226486398,a:"Parse Parse a URL string into its components with proper encoding. Input Output For example, for the input URL http://www.test.com:8080/test url?value=example\u0026value2=URL, this function card returns the following values: protocol: http: host: www.test.com port: 8080 path: /test%20url query: ..."},"202":{y:0,u:"../Content/Topics/Workflows/function-reference/XML/xml_build.htm",l:-1,t:"Build | Okta",i:0.00242907226486398,a:"Build This function converts an object to an XML string. Required fields are indicated by a red asterisk. Input Fields object: object that will be converted into an XML string options rootName: name of the root element of the XML document doctype: doctype of the XML document renderOptions pretty: ..."},"203":{y:0,u:"../Content/Topics/Workflows/function-reference/XML/xml_parse.htm",l:-1,t:"Parse | Okta",i:0.00242907226486398,a:"Parse This function converts an XML string to an object. By converting XML to an object, you will be able to leverage many of the built in functions such as those in the List and Object categories to process and utilize values from the XML string throughout the rest of your Flow. Input Fields ..."},});