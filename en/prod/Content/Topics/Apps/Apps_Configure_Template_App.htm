<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_okta_html5_topnav" data-mc-search-type="Stem" data-mc-help-system-file-name="okta_help.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Configure the Okta Template App and Okta Plugin Template App</title>
        <link rel="shortcut icon" href="../../Resources/Images/favicon.ico" type="image/x-icon" />
        <script>/* <![CDATA[ */
			(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

			ga('create', 'UA-15777010-10', 'auto');
			ga('send', 'pageview');

		/* ]]> */</script>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/okta-help.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="relative clearfix"><a class="logo" href="../ReleaseNotes/okta-rel-notes.htm" alt="Okta"></a>
                                    <div class="navigation-wrapper nocontent">
                                        <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                            </li>
                                        </ul>
                                    </div>
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="nav-search row outer-row">
                                <form class="search" action="#">
                                    <div class="search-bar search-bar-container needs-pie">
                                        <input class="search-field needs-pie" type="search" placeholder="Search" />
                                        <div class="search-filter-wrapper">
                                            <div class="search-filter">
                                                <div class="search-filter-content">
                                                    <ul>
                                                        <li>All Files</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="search-submit-wrapper" dir="ltr">
                                            <div class="search-submit" title="Search">
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <div class="RightSidebar-md">
                                <div>
                                </div>
                                <div>
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_okta_toolbar mc-component nocontent">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                            </button>
                                            <div class="button-separator">
                                            </div>
                                            <button class="button needs-pie print-button" title="Print">
                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                            </button>
                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="RightSidebar-sm">
                                <div>
                                    <ul class="nocontent menu _Skins_okta_side_menu_mobile mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/okta_docsTOC.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                    </ul>
                                    <h1>Configure the Okta Template App and Okta Plugin Template App</h1>
                                    <p>You can choose from three common Secure Web Authentication (<a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">SWA<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An acronym for Secure Web Authentication. SWA is a SSO system developed by Okta to provide single sign-on for apps that don't support proprietary federated sign-on methods or SAML. Users can enter their credentials for these apps on their homepage. These credentials are stored such that users can access their apps without entering their credentials each time. When users first sign-in to a SWA app from their homepage, they see a pop-up message asking if they were able to sign-in successfully.</span></a>) template apps to create apps on demand: one that does a POST to a login page (the <strong>Template <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">App<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An abbreviation of application. Essentially, it is a web-based site used to perform any number of specific tasks, and requires authentication from end users by signing in.</span></a></strong>), and two that use a plugin to POST (the <strong>Template Plugin App</strong> and <b>Template Plugin App 3 Fields</b>). These template apps allow you to create application integrations in real-time on a running system. </p>
                                    <p>The first step is to add each app to your <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">org<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An abbreviation of organization, but can also be thought of as a company. A company that uses Okta as their SSO portal is generally referred to as an org. As an administrator, you decide how Okta should be displayed and/or integrated with your org.</span></a> by searching for them in the <strong>Okta Application Network</strong>.</p>
                                    <ol>
                                        <li value="1">From the <strong>Okta Dashboard</strong>, click the <strong>Application</strong> tab.</li>
                                        <li value="2">Click <strong>Add Application</strong>.</li>
                                        <li value="3">Enter <i>Template App</i> into the <strong>Search</strong> field, then add it. </li>
                                    </ol>
                                    <h2>Configure the Template App
        </h2>
                                    <p>You can use the template app for apps that don't require the plugin.</p>
                                    <p>Complete the following fields:<strong>  <![CDATA[ ]]></strong></p>
                                    <ul>
                                        <li class="li7" value="1"><strong>URL:</strong> the URL of the login form you are posting to (not the URL where you see the form).</li>
                                        <li class="li7" value="2"><strong>Username and password parameter(s):</strong> the parameter names that contain the username and password data.</li>
                                        <li class="li7" value="3"><strong>Optional fields:</strong> extra static field data in the name/value pairs.</li>
                                    </ul>
                                    <p>This app executes a form post to the specified URL. It contains the username and password of a user filled in with the named parameters and static fields that you provide.</p>
                                    <h3 class="p8">Finding the Fields</h3>
                                    <p>The easiest way to see what you need to fill into the fields is to do a login to the app you want to integrate with, then watch the traffic to see what is being sent to the page.</p>
                                    <p>There are a couple of options for viewing traffic, but the easiest is probably to use the <em>Chrome developer tools</em>. In Chrome,</p>
                                    <ol>
                                        <li value="1">Open to the page with the target login form, and switch to the <strong>Network</strong> tab.</li>
                                        <li value="2">Click the <strong>Preserve Log upon Navigation</strong> button (this black circle will turn red when clicked, as shown below).</li>
                                        <li value="3">Clear out the existing traffic and perform your login.</li>
                                        <li value="4">Within the <strong>Header</strong> tab, you should see a POST to the page. If you click on it, you should see all the data that was posted, as well as the URL it went to.</li>
                                    </ol>
                                    <h3>When to choose the Template Plugin App over the Template App</h3>
                                    <p>The fields to note are those such as <strong>xsrfToken</strong>, highlighted above, which contain data that is generated by the server at request time. Such fields are used to confirm that submissions aren't coming from outside the form being rendered. Another frequent example of this are fields like <code style="font-size: 10pt; font-style: normal;">EVENTVALIDATION</code> or <code style="font-size: 10pt; font-style: normal;">FORMVALIDATION</code>, which are generated on asp pages. In such cases, the Template Plugin App is required.</p>
                                    <h2><a name="ConfigureTemplatePlugin"></a>Configure the Template Plugin App
        </h2>
                                    <p>The <strong>Template Plugin App</strong> works similarly to the Template App, the difference being that you don't provide the parameters. Instead, you provide CSS selectors to the relevant fields because the plugin is used to both populate these fields and click the login button.</p>
                                    <ol>
                                        <li value="1">From the <strong>Okta Dashboard</strong>, click the <strong>Application</strong> tab.</li>
                                        <li value="2">Click the <strong>Add Application</strong> button.</li>
                                        <li value="3">Enter "Template Plugin App" into the <strong>Search</strong> field, then add it.</li>
                                    </ol>
                                    <ol data-mc-continue="true">
                                        <li value="4">Complete the following fields:</li>
                                        <ul>
                                            <li class="li7" value="1"><b>Application label:</b> the label you enter displays under the app on <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">end users<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>In Okta literature, we generally refer to "end users" as the people who have their own Okta home page (My Applications), using chiclets to authenticate into all of their apps. End users do not have any administrative control. When we refer to "users" we are generally referring to the individual(s) who have administrative control.</span></a>' home page.</li>
                                            <li class="li7" value="2"><strong>URL/Target URL:</strong> the URL of the log-in form (the actual URL where you can view the form).</li>
                                            <li class="li7" value="3"><b>Regular Expression:</b>&#160;(Optional) This allows you to create a regular expression that serves as a whitelist. This is done to improve app security by restricting access to the URLs that match the pattern that you define. For example, if your log-in URL is <span style="font-family: 'Courier New';">https://example.com/login</span>, and your change password is <span style="font-family: 'Courier New';">https://example.com/change_password</span>, then you might create a regular expression that matches <span style="font-family: 'Courier New';">https://example.com/(login|change_password)</span>.  </li>
                                            <li class="li7" value="4"><strong>Username field/UserName Selector:</strong> the CSS selector for the username fields.</li>
                                            <li class="li7" value="5"><b>Password field/Password Selector:</b> the CSS selector for the password field in the log-in form.</li>
                                            <li class="li7" value="6"><strong>Login Button:</strong> the CSS selector for the log-in button in the log-in form.</li>
                                            <li class="li7" value="7">* <b>Extra Field Selector:</b> CSS selector for the extra field in the form.</li>
                                            <li class="li7" value="8">* <b>Extra Field Value:</b> Value for the extra field form field.</li>
                                        </ul>
                                    </ol>
                                    <p><b>Note:</b> * Applies to the <b>Template Plugin App 3 Fields app</b> only.</p>
                                    <h3>Finding the fields
        </h3>
                                    <p>The way to determine the selectors is to inspect the individual elements on a page. Again, using the<em> Chrome developer tools</em> is a good option. In Chrome,</p>
                                    <ol>
                                        <li value="1">Open to the page with the target login form.</li>
                                        <li value="2">Right click on an input field and use the <strong>Inspect Element</strong> option in the <strong>context</strong> menu to see the actual DOM element. Below that, under <strong>Elements</strong>, you can view the <strong>id</strong> and <strong>class</strong> of the element and, using this information, compose a selector.</li>
                                    </ol>
                                    <p> The full hierarchy can be seen at the bottom of the page, which may be needed when elements can't be uniquely identified by ids or classes.</p>
                                    <p> In the scenerio above, the selectors would be:</p>
                                    <ul>
                                        <li class="li7" value="1"><strong>Username</strong> - #user-signin</li>
                                    </ul>
                                    <ul>
                                        <li class="li7" value="1"><strong>Password</strong> - #pass-signin</li>
                                    </ul>
                                    <ul>
                                        <li class="li7" value="1"><strong>Button</strong> - #signin-button</li>
                                    </ul>
                                    <p>For instances where the app only uses a "name" attribute, and not "id" for its username, password, or submit buttons, you can try using <strong>input[type="text"]</strong>.<br />		For example, input[type="password"] can be used for a password, and input[type="submit"] for a submit button. Other attributes can be queried, for example, input[<strong>class="btn</strong>"] as an alternate way of specifying the submit button. </p>
                                    <h4>Cases where this will not work
        </h4>
                                    <p>The cases where the Template Plugin App is not effective are for sites that,</p>
                                    <ul>
                                        <li class="Apple-tab-span" value="1">do a lot of dynamic HTML creation. Sites like this may fail with this approach because the elements the plugin is looking for won't be present when the plugin fires.</li>
                                        <li class="li7" value="2">require a parameter beyond just username and password.</li>
                                        <li class="li7" value="3">have multiple steps in the login process or load multiple pages between the initial URL and the one that contains the form.</li>
                                        <li class="li7" value="4">use frames or iframes to contain the form. This can sometimes be avoided by using the URL of the frame content as the starting URL (again, you can use <strong>Inspect Element</strong> to figure this out).</li>
                                    </ul>
                                    <p>These cases can all be dealt with by a plugin integration, but not within the context of the Plugin Template App.</p>
                                    <p>If you are presented with such a case, you will need to write the app integration by hand. For this you should contact Okta's Professional Services team to discuss pricing for the app.</p>
                                    <p><strong>Known issue:</strong> The Template Plugin App cannot work in cases where the app's login page redirects <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">users<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>In Okta literature, we generally refer to "users" as the people who serve as Okta administrators. When we refer to "end users" we are generally referring to the people who the administrators serve. That is, those who use Okta chiclets to access their apps, but have no administrative control.</span></a> back to the URL they came from, as this creates an infinite loop. The SWA application must redirect the user to the website's home page, not back to the login page. This means that the login page will accept the user's credentials, then redirect the user back to the Okta home page.</p>
                                </div>
                                <div>
                                    <div data-sticky-container="" id="xl4z4dNP40CPBJjiJ-EljA">
                                        <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="xl4z4dNP40CPBJjiJ-EljA:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="only screen and (min-width: 1280px)">
                                            <ul class="nocontent menu _Skins_okta_side_menu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/okta_docsTOC.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="RightSidebar-sm">&#160;</div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>