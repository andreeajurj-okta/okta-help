<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_okta_html5_topnav" data-mc-search-type="Stem" data-mc-help-system-file-name="okta_help.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Documentation|Product documentation|Applications|Okta + AWS Deployment">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="typeofcontent" content="documentation" />
        <meta name="audience" content="admin" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="description" content="This is one of two ways to connect Okta to multiple AWS instances. The other is to connect Okta to multiple AWS instances using an API. Section includes managing user and group access to accounts and roles, AWS role-specific groups, management groups, high-level overview of the method to connect Okta to multiple AWS instances using groups, setting up AWS for SAML, creating a management layer of groups in AD or LDAP, configuring the AWS app in Okta for group-based role assignment, configuring AWS accounts and roles for SAML SSO, creating AWS role groups in AD or LDAP, configuring AD or LDAP management groups to map users to AWS accounts roles, importing AWS role groups and management groups into Okta, enabling group-based role mapping in Okta, and assigning all AWS management groups to the AWS app in Okta" /><title>Connect Okta to multiple AWS instances using groups | Okta</title>
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, height=device-height" />
        <link rel="shortcut icon" href="../../../Resources/Images/favicon.ico" type="image/x-icon" />
        <!-- Google Tag Manager -->
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], 
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-TJ45R6');
			/* ]]> */
		</script>
        <!-- End Google Tag Manager -->
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/okta-main.css" rel="stylesheet" />
        <link href="https://static.cloud.coveo.com/searchui/v2.5395/css/CoveoFullSearchNewDesign.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/expand-all-non-hover-sm.png') no-repeat center center, linear-gradient(#fff, #fff);
}

.button.collapse-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/collapse-all-non-hover-sm.png') no-repeat center center, linear-gradient(#fff, #fff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="https://support.okta.com/help/s/" alt="Okta"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="2" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TJ45R6" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Coveo config parameters -->
                                    <div id="coveo_org_id" style="Display:None"><span class="okta-coveo-configOrgId">oktaproduction9ounvcxa</span>
                                    </div>
                                    <div id="coveo_rest_uri" style="Display:None"><span class="okta-coveo-configPlatformRestUri">https://platform.cloud.coveo.com/rest/search</span>
                                    </div>
                                    <div id="coveo_search_url" style="Display:None"><span class="okta-coveo-configSearchPageUrl">https://support.okta.com/help/s/global-search/%40uri</span>
                                    </div>
                                    <div id="coveo_token_url" style="Display:None"><span class="okta-coveo-configSearchTokenServiceUrl">https://support.okta.com/help/services/apexrest/PublicSearchToken?site=help</span>
                                    </div>
                                    <!-- End Coveo config parameters -->
                                    <!-- ************************* Coveo Search bar ************************************* -->
                                    <div id="OLC_Coveo_Headline" class="coveo-headline-wrapper">
                                        <div class="slds-p-vertical_small">
                                            <!--Search Bar-->
                                            <div class="slds-grid slds-grid_align-center">
                                                <div id="customSelect" class="CoveoCustomSelect slds-float_right">
                                                </div>
                                                <div id="standaloneSearchbox">
                                                    <div class="CoveoAnalytics" data-search-hub="OktaCommunityFullSearch">
                                                    </div>
                                                    <div class="CoveoTab" data-id="Help" data-caption="Help" style="display:none">
                                                    </div>
                                                    <div class="CoveoSearchbox" data-enable-omnibox="true" data-enable-query-suggest-addon="true">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- **********************  Main content row  ********************** -->
                                    <div class="okta-topics">
                                        <!-- *** Col1: Left Nav Col *** -->
                                        <div class="is-not-in-mobile">
                                            <div data-sticky-container="" id="YeTkg5YJKE6CNeHj2qyvPQ">
                                                <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="YeTkg5YJKE6CNeHj2qyvPQ:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                    <ul class="nocontent menu _Skins_okta_left_menu mc-component" data-mc-linked-toc="Data/Tocs/left_nav_TOC.js" data-mc-side-menu="True" data-mc-max-depth="2" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- *** Col2: Body Col *** -->
                                        <div>
                                            <div class="is-not-in-mobile">
                                                <!-- Breadcrumbs -->
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider="  &gt;  " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="toolbar-main">
                                                <!-- Expand/Collapse All for drop-downs -->
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_okta_toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="body-main">
                                                <!-- Main content body -->
                                                <h1>Connect Okta to multiple AWS instances using groups</h1>
                                                <p>If you have more than 60 AWS accounts and want to drive <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">app<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An abbreviation of application. Essentially, it is a web-based site used to perform any number of specific tasks, and requires authentication from end users by signing in.</span></a> assignment from <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">groups<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>Groups allow you to organize your end users and the apps they can access. Assigning apps to large sets of end users is made easier with groups.</span></a> within an external directory (AD or <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">LDAP<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>Lightweight Directory Access Protocol (LDAP) is a lightweight client-server protocol for accessing directory services, specifically X.500-based directory services. LDAP runs over TCP/IP or other connection oriented transfer services.</span></a>), the preferred method is to connect to Okta using user groups.</p>
                                                <p>The Okta-AWS integration does not use provisioning functionality.</p>
                                                <p>There is no limitation on the number of AWS accounts and roles you can have.</p>
                                                <h2><a name="Managing"></a>Managing user and group access to accounts and roles</h2>
                                                <div style="padding-left: 15px;padding-right: 15px;padding-top: 15px;padding-bottom: 15px;border-left-style: solid;border-left-width: 5px;">
                                                    <p><b>Note</b>
                                                    </p>
                                                    <p>While this guide applies to an external directory, other applications (including profile-mastered ones and local Okta groups) can be used as well.</p>
                                                </div>
                                                <p>Connecting Okta to multiple AWS instances using groups is supported primarily in an external directory. Administrators work with two logical sets of  external directory groups: AWS role-specific groups and management groups.</p>
                                                <h3>AWS role-specific groups</h3>
                                                <p>A group must exist  within an external directory for each specific account and role combination for which you want to provide access. Think of these groups as <i>AWS role-specific groups</i>. The group name should follow a particular syntax.</p>
                                                <p>
                                                    <img src="../../../Resources/Images/aws/aws_groups1.png" />
                                                </p>
                                                <p>A user who is a member of a role-specific group is granted a single-entitlement access to one specific role in one specific AWS account.  A role-specific group can be created by a script, exported as a list from AWS, or created manually.</p>
                                                <h3>Management groups</h3>
                                                <p>It's not efficient to manage user access by assigning each user to specific AWS role groups. To simplify matters, create a number of groups—management groups, for all distinct user sets in your organization that require different sets of AWS entitlements.</p>
                                                <p>These groups may already exist in your external directory hierarchy in the form of different department-specific groups, but you can also create them solely for AWS.</p>
                                                <p>
                                                    <img src="../../../Resources/Images/aws/aws_groups2.png" />
                                                </p>
                                                <p>The management groups are the administration layer where you assign users (as <b>groupMembers</b>) and map these users to specific entitlements through AWS role groups (as <b>Members Of</b>).</p>
                                                <p>
                                                    <img src="../../../Resources/Images/aws/aws_new_aaa.png" />
                                                </p>
                                                <p>Once you create the management groups in an external directory, all administrative tasks should be done using these groups. Use them to:</p>
                                                <ul style="list-style-type: square;">
                                                    <li value="1">Add and remove users</li>
                                                    <li value="2">Grant access to AWS accounts and roles</li>
                                                    <li value="3">Update specific entitlements by adding or removing AWS Role Groups in the <b>Member Of</b> group property</li>
                                                </ul>
                                                <h2><a name="High-lev"></a>High-level overview</h2>
                                                <p>
                                                    <img src="../../../Resources/Images/aws/aws_new_bb.png" />
                                                </p>
                                                <h3><a name="Set2"></a>Set up AWS for SAML</h3>
                                                <p>Each AWS account must be configured for <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">SAML<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An acronym for Security Assertion Markup Language, SAML is an XML-based standard for exchanging authentication and authorization data between an identity provider (IdP) and a service provider (SP). The SAML standard addresses issues unique to the single sign-on (SSO) solution, and defines three roles: the end user, the IdP, and the SP.

Here's how SAML works through Okta:

SP-initiated flow: the end user requests (principally through a browser) a service from the SP. The SP requests and obtains an identity assertion from the IdP (in this case, Okta). On the basis of this assertion, the SP can decide whether or not to authorize or authenticate the service for the end user.
IdP-initiated flow: with Okta as the IdP, an end user goes to the Okta browser and clicks on an app, sending a SAMLResponse to the configured SP. A session is established with the SP, and the end user is authenticated.</span></a> access in order to exchange authentication and authorization data between AWS and Okta. This requires adding Okta as a trusted <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">IDP<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An acronym for Identity Provider. It is a service that manages end user accounts analogous to user directories such as LDAP and Active Directory, and can send SAML responses to SPs to authenticate end users. Within this scenario, the IdP is Okta.</span></a> to your AWS account and then creating a trust relationship for each role that permits access using the new IDP. These same steps provide SAML <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">SSO<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An acronym for single sign-on. In a SSO system, a user logs in once to the system and can access multiple systems without being prompted to sign in for each one. Okta is a cloud-based SSO platform that allows users to enter one name and password to access multiple applications. Users can access all of their web applications, both behind the firewall and in the cloud, with a single sign in. Okta provides a seamless experience across PCs, laptops, tablets, and smartphones.</span></a> in a single AWS account, but must be performed across all of your AWS accounts. For advanced organizations, this setup can be automated with <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">AWS CloudFormation<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>AWS CloudFormation provides a common language for you to describe and provision all the infrastructure resources in your cloud environment. CloudFormation allows you to use a simple text file to model and provision, in an automated and secure manner, all the resources needed for your applications across all regions and accounts. This file serves as the single source of truth for your cloud environment.</span></a> or AWS API scripts for simple SAML setup in each account.</p>
                                                <h3>Create a management layer of groups in an external directory</h3>
                                                <p>Once SAML is configured, create AWS role groups in an external directory for each role and account you want users to be able to access using Okta. This can be completed using a script between AWS and  an external directory, by exporting a CSV file to  an external directory and scripting against the CSV file on the  external directory side, or manually.</p>
                                                <p>Next, create a link between the AWS role-specific groups and other  external-directory groups by assigning management groups as <b>Members Of</b> the AWS role groups to which you want to grant them access. Assign users to the management groups to allow access to all of the AWS roles and accounts for which the management group is a member.</p>
                                                <h3>Configure the AWS app in Okta for group-based role assignment</h3>
                                                <p>In Okta, import both the  external-directory management groups and role groups using the appropriate Okta  external <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">agent<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>A software agent is a lightweight program that runs as a service outside of Okta. It is typically installed behind a firewall and allows Okta to tunnel communication between an on-premises service and Okta's cloud service. Okta employs several agent types: Active Directory, LDAP, RADIUS, RSA, Active Directory Password Sync, and IWA. For example, users can install multiple Active Directory agents to ensure that the integration is robust and highly available across geographic locations.</span></a>.</p>
                                                <p>Next, assign your management groups to the AWS application you set up earlier. This assigns the proper users to the AWS app. </p>
                                                <p>Lastly, set up group-based role assignment to translate the names of each of your AWS role groups into a format that AWS can consume in order to list user roles in the <b>Role Picker Page</b>.</p>
                                                <h2><a name="Step2"></a>Step 1: Configure AWS accounts and roles for SAML SSO</h2>
                                                <p><b style="color: #696969;">About</b>
                                                </p>
                                                <p>You must configure each AWS account for SAML access in order to exchange authentication and authorization data between AWS and Okta.</p>
                                                <p><b style="color: #696969;">Procedure</b>
                                                </p>
                                                <ol>
                                                    <li value="1">Create a new AWS app in Okta and then select SAML from the <b>Single Sign-On</b> tab.</li>
                                                    <li value="2">
                                                        <p>Connect Okta to a single AWS instance.</p>
                                                        <div style="padding-left: 15px;padding-right: 15px;padding-top: 15px;padding-bottom: 15px;border-left-style: solid;border-left-width: 5px;">
                                                            <p><b>Reference in-product guide</b>
                                                            </p>
                                                            <p>To receive the necessary auto-generated variables, complete steps 1 and 2 of the "Connect Okta to a single AWS instance" section </p>
                                                            <p>You can also view <a href="connect-okta-single-aws.htm#Step3" class="MCXref xref">Step 1: Configure Okta as the identity provider in the AWS account</a> and <a href="connect-okta-single-aws.htm#Step4" class="MCXref xref">Step 2: Add Okta Identity Provider as a trusted source in your AWS roles</a> of <a href="connect-okta-single-aws.htm" class="MCXref xref">Connect Okta to a single AWS instance</a> without receiving any auto-generated variables.</p>
                                                        </div>
                                                    </li>
                                                    <li value="3">
                                                        <p>Complete steps 1 and 2 for all of AWS accounts and roles for which you want to grant users access—and ensure that all of your accounts are configured with the same SAML metadata and have the same name.</p>
                                                        <p>An account with a different SAML provider name or metadata document is not accessible.</p>
                                                    </li>
                                                </ol>
                                                <h2><a name="Step3"></a>Step 2: Create AWS role groups in  an external directory </h2>
                                                <p><b style="color: #696969;">About</b>
                                                </p>
                                                <p>In order to have access to each AWS account, you need to create groups in an external directory for each AWS role in each of these accounts. These group names are utilized by a filter to tie them to the corresponding AWS roles.</p>
                                                <p><b style="color: #696969;">Procedure</b>
                                                </p>
                                                <ol>
                                                    <li value="1">
                                                        <p>Create AWS role-specific groups in your directory using one of the following methods:</p>
                                                        <ul style="list-style-type: square;">
                                                            <li value="1">
                                                                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Script between AWS and the external directory that creates external-directory groups for each role in each account</a></span>
                                                                    <div class="MCDropDownBody dropDownBody">
                                                                        <p>This option offers the greatest possibility of automation, but requires coordination between your AWS management teams and  external-directory management teams for the script to be configured. </p>
                                                                    </div>
                                                                </div>
                                                            </li>
                                                            <li value="2">
                                                                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />CSV file export from AWS</a></span>
                                                                    <div class="MCDropDownBody dropDownBody">
                                                                        <p>If a scripting approach between AWS and  the external directory is not possible, a lighter weight approach may be to export a list of role names for each of your AWS accounts in a CSV file that you provide to your  external-directory administration teams. From there, they can manage the creation of AWS role groups however they see fit without any sort of dependencies or direct integration with your AWS accounts themselves.</p>
                                                                    </div>
                                                                </div>
                                                            </li>
                                                            <li value="3">
                                                                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Manual creation of AWS role groups in the external directory</a></span>
                                                                    <div class="MCDropDownBody dropDownBody">
                                                                        <p>This is the simplest method; however, it requires upkeep as well as ample set up time to create groups in the external directory for each of the roles in each of your accounts.</p>
                                                                    </div>
                                                                </div>
                                                            </li>
                                                        </ul>
                                                    </li>
                                                </ol>
                                                <p style="text-decoration: none;">Regardless of how you choose to create the AWS role-specific groups in your directory, we recommend completing the following steps:</p>
                                                <ol data-mc-continue="true">
                                                    <li value="2">
                                                        <p>To simplify group management in AD, create an organizational unit (<a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">OU<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An acronym of Organizational Unit. Organizational units are Active Directory containers into which you can place users, groups, computers, and other organizational units.  It is the smallest scope or unit to which you can assign Group Policy settings or delegate administrative authority.</span></a>) in your directory to contain all AWS role-specific groups to be tied to AWS roles.</p>
                                                        <p>Possible OU names could be <i>AWS Role Groups</i> and <i>AWS Entitlements</i>.</p>
                                                    </li>
                                                    <li value="3">
                                                        <p> Using a standard syntax, create external directory-security groups for each role.</p>
                                                        <p>Recommended syntax:</p><pre>aws#[account alias]#[role name]#[account #]</pre>
                                                        <p>Example:</p><pre xml:space="preserve">aws#northamerica-production#Tier1_Support#828416469395</pre>
                                                        <p>Also available is a regex expression to filter AWS related groups and extract accountid and role. </p>
                                                        <p>Example:</p><pre>aws_(?{{accountid}}\d+)_(?{{role}}[a-zA-Z0-9+=,.@\-_]+)</pre>
                                                    </li>
                                                </ol>
                                                <div style="padding-left: 15px;padding-right: 15px;padding-top: 15px;padding-bottom: 15px;border-left-style: solid;border-left-width: 5px;">
                                                    <p><b>Note</b>
                                                    </p>
                                                    <p>If you prefer to use your own group syntax, make sure to include an account alias, role name, and account # with recognizable delimiters in between each. This will also require the creation of a custom regex expression (see <a href="#Step" class="MCXref xref">Step 5: Enable group-based role mapping in Okta</a>). Therefore, this should only be done if you are comfortable with these advanced topics.</p>
                                                </div>
                                                <h2><a name="Step4"></a>Step 3: Configure AD or LDAP management groups to map users to AWS accounts roles</h2>
                                                <p><b style="color: #696969;">About</b>
                                                </p>
                                                <p>It's necessary to create another set of external-directory groups in order to establish a link between sets of users and the specific AWS accounts and roles to which they want access.</p>
                                                <p><b style="color: #696969;">Procedure</b>
                                                </p>
                                                <ol>
                                                    <li value="1">
                                                        <p>If you have no groups in AD to manage AWS entitlements for users, then:</p>
                                                        <ul style="list-style-type: square;">
                                                            <li value="1">
                                                                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Create another organizational unit (OU) in your directory for AWS management groups.</a></span>
                                                                    <div class="MCDropDownBody dropDownBody">
                                                                        <ul style="list-style-type: square;">
                                                                            <li value="1">Alternatively, you can place these groups wherever you prefer in your directory.</li>
                                                                            <li value="2">A different OU is recommended to simplify administration.</li>
                                                                        </ul>
                                                                    </div>
                                                                </div>
                                                            </li>
                                                            <li value="2">
                                                                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Create groups for each user population that requires a different set of AWS roles and accounts.</a></span>
                                                                    <div class="MCDropDownBody dropDownBody">
                                                                        <p>Give meaningful names to the groups. Example: <i>Tier 1 AWS Support</i>, <i>Database Admins</i>, <i>AWS Super Admins</i></p>
                                                                    </div>
                                                                </div>
                                                            </li>
                                                        </ul>
                                                    </li>
                                                    <li value="2">
                                                        <p> Assign each management group to the AWS role group or groups for which it requires access. </p>
                                                        <p>This establishes a link between the management groups and the entitlements in all AWS accounts to which group users should have access.</p>
                                                        <p>For each management group, you can add, remove, modify, and audit AWS entitlements in the <b>Members Of</b> tap of the <b>DevOps Sys Admins Properties</b> dialog box.</p>
                                                        <p>
                                                            <img src="../../../Resources/Images/aws/aws_new_cc.png" />
                                                        </p>
                                                    </li>
                                                    <li value="3">
                                                        <p>Assign individual users to the management groups to make them members of the desired AWS role group.</p>
                                                        <p>Similarly, you can add, remove, modify, and audit user membership of each group from the <b>Members</b> tab of the <b>DevOps Sys Admins Properties</b> dialog box as well.</p>
                                                        <p>
                                                            <img src="../../../Resources/Images/aws/aws_new_dd.png" />
                                                        </p>
                                                    </li>
                                                </ol>
                                                <p>The management groups become the central control point to add, remove, and audit user access to different sets of AWS entitlements.</p>
                                                <h2><a name="Step5"></a>Step 4: Import AWS role groups and management groups into Okta</h2>
                                                <p>AWS role groups and management groups need to be imported into Okta and configured for use in the AWS app you set up earlier. Importing these groups is typically done using the Okta external directory agent (AD or LDAP).</p>
                                                <div style="padding-left: 15px;padding-right: 15px;padding-top: 15px;padding-bottom: 15px;border-left-style: solid;border-left-width: 5px;">
                                                    <p><b>Reference in-product guide</b>
                                                    </p>
                                                    <p>Access the instructions on installing the Okta external directory (AD or LDAP) agent (<b>Directory &gt; Directory Integrations</b>).</p>
                                                </div>
                                                <p>Upon completion, you should be able to see both your AWS role groups and management groups from the <b>Groups</b> page in the Okta <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">Admin<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>An abbreviation of administrator. This is the individual(s) who have access to the Okta Administrator Dashboard. They control the provisioning and deprovisioning of end users, the assigning of apps, the resetting of passwords, and the overall end user experience. Only administrators have the Administration button on the upper right side of the My Applications page.</span></a> Dashboard.</p>
                                                <p>
                                                    <img src="../../../Resources/Images/aws/aws_groups3.png" />
                                                </p>
                                                <h2><a name="Step"></a>Step 5: Enable group-based role mapping in Okta</h2>
                                                <p><b style="color: #696969;">About</b>
                                                </p>
                                                <p>Once the groups have been imported into Okta, the AWS app you set up earlier must be configured to translate AWS role-group membership into entitlements that AWS can understand syntactically.</p>
                                                <p><b style="color: #696969;">Procedure</b>
                                                </p>
                                                <ol>
                                                    <li value="1">
                                                        <p>From the Okta Admin Dashboard, choose <b>Applications &gt; Applications</b>.</p>
                                                    </li>
                                                    <li value="2">Click the <b>Sign On</b> tab for the AWS app and then click <b>Edit</b>.</li>
                                                    <li value="3">
                                                        <p>Complete the <b>App Filter</b>, <b>Group Filter</b>, and <b>Role Value Pattern</b> fields with the appropriate information.</p>
                                                        <p>These fields control how Okta maps your AWS role groups into entitlements for this feature. Configure these fields as follows:</p>
                                                        <ul style="list-style-type: square;">
                                                            <li value="1">
                                                                <p><b>App Filter</b>
                                                                </p>
                                                                <p>This filter narrows the list of groups that Okta can use for AWS entitlement mapping to a specific app or directory. This exists for security purposes, to avoid possible situations where rogue admins create groups following a certain syntax in order to intentionally gain unauthorized access to a specific AWS account or role. If you created your groups in <a href="javascript:void(0);" class="MCTextPopup MCTextPopupHotSpot MCTextPopup_Open MCTextPopupHotSpot_ MCTextPopupHotSpot_Popup #text #textPopup">Active Directory<span class="MCTextPopupBody popupBody"><span class="MCTextPopupArrow"></span>Active Directory (AD) is a directory service that Microsoft developed for the Windows domain networks. It is included in most Windows Server operating systems as a set of processes and services. Initially, Active Directory was only in charge of centralized domain management.</span></a>, you can input <code>active_directory</code>, if you want to limit usage by local Okta groups, input <code>okta</code>. For other applications, you can use values such as: <code>bamboohr</code> for the Bamboo HR app or <code>okta</code>, <code>egnyte</code> for Okta + Egnyte groups.</p>
                                                            </li>
                                                            <li value="2">
                                                                <p><b>Group Filter</b>
                                                                </p>
                                                                <p>This filter field uses a regex expression to inspect groups from your chosen app filter that follow a specific syntax. If you chose to use the Okta-recommended default AWS role group syntax (<code>aws#[account alias]#[role name]#[account #]</code>), then you can simply use the following regex string:</p><pre>^aws\#\S+\#(?{{role}}[\w\-]+)\#(?{{accountid}}\d+)$</pre>
                                                                <p>This regex expression logically equates to: <b>find groups that start with AWS, then #, then a string of text, then #, then the AWS role, then #, then the AWS account ID</b>.</p>
                                                                <p>Also available is another regular expression by default:</p><pre>aws_(?{{accountid}}\d+)_(?{{role}}[a-zA-Z0-9+=,.@\-_]+)</pre>
                                                                <p>If you didn’t use the default, recommended AWS role group syntax, then create a regex expression that properly filters your AWS role groups, and captures the AWS role name and AWS account ID within two distinct regex groups named <b>{{role}}</b> and <b>{{accountid}}</b>, respectively.</p>
                                                                <p>
                                                                    <img src="../../../Resources/Images/aws/aws_groups4_589x240.png" style="width: 589;height: 240;" />
                                                                </p>
                                                            </li>
                                                            <li value="3">
                                                                <p><b>Role Value Pattern</b>
                                                                </p>
                                                                <p>This field takes the AWS role and account ID captured within the syntax</p>
                                                                <p>of your AWS role groups and translates it into the proper syntax AWS</p>
                                                                <p>requires in the Okta SAML assertion. This enables users to view their accounts</p>
                                                                <p>and roles when they sign in.</p>
                                                                <p>Field syntax:</p><pre xml:space="preserve">arn:aws:iam::${accountid}:saml-provider/[SAML Provider Name],</pre><pre xml:space="preserve">arn:aws:iam::${accountid}:role/${role}</pre>
                                                                <p>Replace <b>[SAML Provider Name]</b> with the name of the SAML provider that you set up in all of your AWS accounts (see <a href="#Set2" class="MCXref xref">Set up AWS for SAML</a>). The rest of the string should not be altered, only copied and pasted.</p>
                                                            </li>
                                                        </ul>
                                                    </li>
                                                </ol>
                                                <h2><a name="Step6"></a>Step 6: Assign all AWS management groups to the AWS app in Okta</h2>
                                                <ol>
                                                    <li value="1">
                                                        <p>With AWS configured to map AWS role groups to entitlements, assign all AWS management groups to AWS in Okta.</p>
                                                        <div style="padding-left: 15px;padding-right: 15px;padding-top: 15px;padding-bottom: 15px;border-left-style: solid;border-left-width: 5px;">
                                                            <p><b>Note</b>
                                                            </p>
                                                            <p>If you have a configuration with provisioning enabled, you may not be able to assign a management group. In this case, disable provisioning in your configuration and then assign all AWS management groups to the AWS app in Okta.</p>
                                                        </div>
                                                        <ul style="list-style-type: square;">
                                                            <li value="1">Appropriate users are automatically assigned to AWS.</li>
                                                            <li value="2">Users only have access to the appropriate entitlements, based on what you specified in <a href="#Step" class="MCXref xref">Step 5: Enable group-based role mapping in Okta</a>.</li>
                                                            <li value="3">Setup is now complete. </li>
                                                        </ul>
                                                    </li>
                                                    <li value="2">
                                                        <p>Verify that users can access AWS from their Okta end-user Dashboard and sign-on is seamless.</p>
                                                    </li>
                                                </ol>
                                                <!-- Back to Top button --><a href="#" class="sf-back-to-top"><span class="arrow"></span>Top</a>
                                            </div>
                                        </div>
                                        <!-- *** Col3: Right menu Col *** -->
                                        <div class="is-not-in-mobile">
                                            <div data-sticky-container="" id="DXlhXL4ErU6-Fq41-scn2Q">
                                                <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="DXlhXL4ErU6-Fq41-scn2Q:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                    <ul class="nocontent menu _Skins_okta_right_menu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/okta_TOC.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="False" data-mc-include-parent="True" data-mc-toc="True">
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- ***************************** Footer rows ********************************* -->
                                    <div class="footer-temp">
                                        <div class="is-not-in-mobile">
                                            <p> </p>
                                        </div>
                                        <div>
                                            <p class="copyright">©  <span class="okta-variablesYear">2019</span> <span class="okta-variablesCompanyName">Okta, Inc</span> All Rights Reserved. Various trademarks held by their respective owners.</p>
                                        </div>
                                    </div>
                                    <!-- ***************************** Scripts ************************************* -->
                                    <!-- Foundation -->
                                    <script src="../../../Resources/Scripts/js/app.js">
                                    </script>
                                    <script src="../../../Resources/Scripts/js/vendor/what-input.js">
                                    </script>
                                    <script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.4-rc1/js/foundation.min.js">
                                    </script>
                                    <!-- Ours -->
                                    <script type="text/javascript" src="../../../Resources/Scripts/back-to-top.js">
                                    </script>
                                    <script type="text/javascript" src="../../../Resources/Scripts/get-feedback.js">
                                    </script>
                                    <!-- Coveo -->
                                    <script src="https://static.cloud.coveo.com/searchui/v2.5395/js/CoveoJsSearch.Lazy.min.js">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/cultures/en.js" id="coveoCultureScript">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/Coveo.MadcapFlare.RequireJS.js" id="coveoRequireScript">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/Coveo.MadcapFlare.Okta.js" id="coveoInitscript">
                                    </script>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>